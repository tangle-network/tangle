{"abi":[{"type":"function","name":"ROOT_CHAIN","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"blueprintOwner","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"currentBlueprintId","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"masterBlueprintServiceManager","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"masterBlueprintServiceManagerAddress","inputs":[],"outputs":[{"name":"mbsm","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"onApprove","inputs":[{"name":"operator","type":"tuple","internalType":"struct ServiceOperators.OperatorPreferences","components":[{"name":"ecdsaPublicKey","type":"bytes","internalType":"bytes"},{"name":"priceTargets","type":"tuple","internalType":"struct ServiceOperators.PriceTargets","components":[{"name":"cpu","type":"uint64","internalType":"uint64"},{"name":"mem","type":"uint64","internalType":"uint64"},{"name":"storage_hdd","type":"uint64","internalType":"uint64"},{"name":"storage_ssd","type":"uint64","internalType":"uint64"},{"name":"storage_nvme","type":"uint64","internalType":"uint64"}]}]},{"name":"requestId","type":"uint64","internalType":"uint64"},{"name":"restakingPercent","type":"uint8","internalType":"uint8"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"onBlueprintCreated","inputs":[{"name":"blueprintId","type":"uint64","internalType":"uint64"},{"name":"owner","type":"address","internalType":"address"},{"name":"mbsm","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"onJobCall","inputs":[{"name":"serviceId","type":"uint64","internalType":"uint64"},{"name":"job","type":"uint8","internalType":"uint8"},{"name":"jobCallId","type":"uint64","internalType":"uint64"},{"name":"inputs","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"onJobResult","inputs":[{"name":"serviceId","type":"uint64","internalType":"uint64"},{"name":"job","type":"uint8","internalType":"uint8"},{"name":"jobCallId","type":"uint64","internalType":"uint64"},{"name":"operator","type":"tuple","internalType":"struct ServiceOperators.OperatorPreferences","components":[{"name":"ecdsaPublicKey","type":"bytes","internalType":"bytes"},{"name":"priceTargets","type":"tuple","internalType":"struct ServiceOperators.PriceTargets","components":[{"name":"cpu","type":"uint64","internalType":"uint64"},{"name":"mem","type":"uint64","internalType":"uint64"},{"name":"storage_hdd","type":"uint64","internalType":"uint64"},{"name":"storage_ssd","type":"uint64","internalType":"uint64"},{"name":"storage_nvme","type":"uint64","internalType":"uint64"}]}]},{"name":"inputs","type":"bytes","internalType":"bytes"},{"name":"outputs","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"onRegister","inputs":[{"name":"operator","type":"tuple","internalType":"struct ServiceOperators.OperatorPreferences","components":[{"name":"ecdsaPublicKey","type":"bytes","internalType":"bytes"},{"name":"priceTargets","type":"tuple","internalType":"struct ServiceOperators.PriceTargets","components":[{"name":"cpu","type":"uint64","internalType":"uint64"},{"name":"mem","type":"uint64","internalType":"uint64"},{"name":"storage_hdd","type":"uint64","internalType":"uint64"},{"name":"storage_ssd","type":"uint64","internalType":"uint64"},{"name":"storage_nvme","type":"uint64","internalType":"uint64"}]}]},{"name":"registrationInputs","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"onReject","inputs":[{"name":"operator","type":"tuple","internalType":"struct ServiceOperators.OperatorPreferences","components":[{"name":"ecdsaPublicKey","type":"bytes","internalType":"bytes"},{"name":"priceTargets","type":"tuple","internalType":"struct ServiceOperators.PriceTargets","components":[{"name":"cpu","type":"uint64","internalType":"uint64"},{"name":"mem","type":"uint64","internalType":"uint64"},{"name":"storage_hdd","type":"uint64","internalType":"uint64"},{"name":"storage_ssd","type":"uint64","internalType":"uint64"},{"name":"storage_nvme","type":"uint64","internalType":"uint64"}]}]},{"name":"requestId","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"onRequest","inputs":[{"name":"requestId","type":"uint64","internalType":"uint64"},{"name":"requester","type":"address","internalType":"address"},{"name":"operators","type":"tuple[]","internalType":"struct ServiceOperators.OperatorPreferences[]","components":[{"name":"ecdsaPublicKey","type":"bytes","internalType":"bytes"},{"name":"priceTargets","type":"tuple","internalType":"struct ServiceOperators.PriceTargets","components":[{"name":"cpu","type":"uint64","internalType":"uint64"},{"name":"mem","type":"uint64","internalType":"uint64"},{"name":"storage_hdd","type":"uint64","internalType":"uint64"},{"name":"storage_ssd","type":"uint64","internalType":"uint64"},{"name":"storage_nvme","type":"uint64","internalType":"uint64"}]}]},{"name":"requestInputs","type":"bytes","internalType":"bytes"},{"name":"permittedCallers","type":"address[]","internalType":"address[]"},{"name":"ttl","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"onServiceInitialized","inputs":[{"name":"requestId","type":"uint64","internalType":"uint64"},{"name":"serviceId","type":"uint64","internalType":"uint64"},{"name":"owner","type":"address","internalType":"address"},{"name":"permittedCallers","type":"address[]","internalType":"address[]"},{"name":"ttl","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"onServiceTermination","inputs":[{"name":"serviceId","type":"uint64","internalType":"uint64"},{"name":"owner","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"onSlash","inputs":[{"name":"serviceId","type":"uint64","internalType":"uint64"},{"name":"offender","type":"bytes","internalType":"bytes"},{"name":"slashPercent","type":"uint8","internalType":"uint8"},{"name":"totalPayout","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"onUnappliedSlash","inputs":[{"name":"serviceId","type":"uint64","internalType":"uint64"},{"name":"offender","type":"bytes","internalType":"bytes"},{"name":"slashPercent","type":"uint8","internalType":"uint8"},{"name":"totalPayout","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"onUnregister","inputs":[{"name":"operator","type":"tuple","internalType":"struct ServiceOperators.OperatorPreferences","components":[{"name":"ecdsaPublicKey","type":"bytes","internalType":"bytes"},{"name":"priceTargets","type":"tuple","internalType":"struct ServiceOperators.PriceTargets","components":[{"name":"cpu","type":"uint64","internalType":"uint64"},{"name":"mem","type":"uint64","internalType":"uint64"},{"name":"storage_hdd","type":"uint64","internalType":"uint64"},{"name":"storage_ssd","type":"uint64","internalType":"uint64"},{"name":"storage_nvme","type":"uint64","internalType":"uint64"}]}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"onUpdatePriceTargets","inputs":[{"name":"operator","type":"tuple","internalType":"struct ServiceOperators.OperatorPreferences","components":[{"name":"ecdsaPublicKey","type":"bytes","internalType":"bytes"},{"name":"priceTargets","type":"tuple","internalType":"struct ServiceOperators.PriceTargets","components":[{"name":"cpu","type":"uint64","internalType":"uint64"},{"name":"mem","type":"uint64","internalType":"uint64"},{"name":"storage_hdd","type":"uint64","internalType":"uint64"},{"name":"storage_ssd","type":"uint64","internalType":"uint64"},{"name":"storage_nvme","type":"uint64","internalType":"uint64"}]}]}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"queryDisputeOrigin","inputs":[{"name":"","type":"uint64","internalType":"uint64"}],"outputs":[{"name":"disputeOrigin","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"querySlashingOrigin","inputs":[{"name":"","type":"uint64","internalType":"uint64"}],"outputs":[{"name":"slashingOrigin","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"rootChain","inputs":[],"outputs":[{"name":"rootChainAddress","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"error","name":"OnlyMasterBlueprintServiceManagerAllowed","inputs":[{"name":"caller","type":"address","internalType":"address"},{"name":"masterBlueprintServiceManager","type":"address","internalType":"address"}]},{"type":"error","name":"OnlyRootChainAllowed","inputs":[{"name":"caller","type":"address","internalType":"address"},{"name":"rootChain","type":"address","internalType":"address"}]}],"bytecode":{"object":"0x608060405234801561001057600080fd5b50610b9a806100206000396000f3fe60806040526004361061012a5760003560e01c8063884673ac116100ab578063a4d91fe91161006f578063a4d91fe9146102e3578063bb43abd914610301578063d7deb4821461030f578063e926cbd11461012f578063f84076621461032f578063fe0dd3711461034f57600080fd5b8063884673ac146102585780639838caa314610280578063987ab9db1461028e5780639d0410ee146102b5578063a24e8a90146102c857600080fd5b8063434698bb116100f2578063434698bb146101e15780635d79ea291461020157806365ce59fa1461022557806374ceeb55146101ae578063821c7be21461023857600080fd5b80630af7d7431461012f5780630b6535d7146101515780630d0dd3991461017157806314b4df4c146101ae57806337c29662146101ce575b600080fd5b34801561013b57600080fd5b5061014f61014a366004610638565b61035d565b005b34801561015d57600080fd5b5061014f61016c3660046106bb565b6103a9565b34801561017d57600080fd5b50600054610191906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156101ba57600080fd5b506101916101c93660046106fe565b503090565b61014f6101dc366004610738565b610432565b3480156101ed57600080fd5b5061014f6101fc3660046107fd565b610478565b34801561020d57600080fd5b5061021760015481565b6040519081526020016101a5565b61014f61023336600461087d565b6104b7565b34801561024457600080fd5b5061014f610253366004610947565b6104fe565b34801561026457600080fd5b5061019173111111111111111111111111111111111111111181565b61014f61014a366004610994565b34801561029a57600080fd5b50731111111111111111111111111111111111111111610191565b61014f6102c3366004610a09565b61053e565b3480156102d457600080fd5b5061014f610253366004610a71565b3480156102ef57600080fd5b506000546001600160a01b0316610191565b61014f6102c3366004610a9b565b34801561031b57600080fd5b5061014f61032a366004610aef565b61057f565b34801561033b57600080fd5b50600254610191906001600160a01b031681565b61014f6101fc3660046107fd565b6000546001600160a01b031633146103a257600054604051630c423fcf60e01b81526103999133916001600160a01b0390911690600401610b73565b60405180910390fd5b5050505050565b33731111111111111111111111111111111111111111146103f557337311111111111111111111111111111111111111116040516359afe8af60e11b8152600401610399929190610b73565b6001600160401b0392909216600155600280546001600160a01b039283166001600160a01b03199182161790915560008054929093169116179055565b6000546001600160a01b0316331461046e57600054604051630c423fcf60e01b81526103999133916001600160a01b0390911690600401610b73565b5050505050505050565b6000546001600160a01b031633146104b457600054604051630c423fcf60e01b81526103999133916001600160a01b0390911690600401610b73565b50565b6000546001600160a01b031633146104f357600054604051630c423fcf60e01b81526103999133916001600160a01b0390911690600401610b73565b505050505050505050565b6000546001600160a01b0316331461053a57600054604051630c423fcf60e01b81526103999133916001600160a01b0390911690600401610b73565b5050565b6000546001600160a01b0316331461057a57600054604051630c423fcf60e01b81526103999133916001600160a01b0390911690600401610b73565b505050565b6000546001600160a01b031633146105bb57600054604051630c423fcf60e01b81526103999133916001600160a01b0390911690600401610b73565b505050505050565b80356001600160401b03811681146105da57600080fd5b919050565b60008083601f8401126105f157600080fd5b5081356001600160401b0381111561060857600080fd5b60208301915083602082850101111561062057600080fd5b9250929050565b803560ff811681146105da57600080fd5b60008060008060006080868803121561065057600080fd5b610659866105c3565b945060208601356001600160401b0381111561067457600080fd5b610680888289016105df565b9095509350610693905060408701610627565b949793965091946060013592915050565b80356001600160a01b03811681146105da57600080fd5b6000806000606084860312156106d057600080fd5b6106d9846105c3565b92506106e7602085016106a4565b91506106f5604085016106a4565b90509250925092565b60006020828403121561071057600080fd5b610719826105c3565b9392505050565b600060c0828403121561073257600080fd5b50919050565b60008060008060008060008060c0898b03121561075457600080fd5b61075d896105c3565b975061076b60208a01610627565b965061077960408a016105c3565b955060608901356001600160401b038082111561079557600080fd5b6107a18c838d01610720565b965060808b01359150808211156107b757600080fd5b6107c38c838d016105df565b909650945060a08b01359150808211156107dc57600080fd5b506107e98b828c016105df565b999c989b5096995094979396929594505050565b60006020828403121561080f57600080fd5b81356001600160401b0381111561082557600080fd5b61083184828501610720565b949350505050565b60008083601f84011261084b57600080fd5b5081356001600160401b0381111561086257600080fd5b6020830191508360208260051b850101111561062057600080fd5b600080600080600080600080600060c08a8c03121561089b57600080fd5b6108a48a6105c3565b98506108b260208b016106a4565b975060408a01356001600160401b03808211156108ce57600080fd5b6108da8d838e01610839565b909950975060608c01359150808211156108f357600080fd5b6108ff8d838e016105df565b909750955060808c013591508082111561091857600080fd5b506109258c828d01610839565b9094509250610938905060a08b016105c3565b90509295985092959850929598565b6000806040838503121561095a57600080fd5b82356001600160401b0381111561097057600080fd5b61097c85828601610720565b92505061098b602084016105c3565b90509250929050565b6000806000806000608086880312156109ac57600080fd5b6109b5866105c3565b94506109c360208701610627565b93506109d1604087016105c3565b925060608601356001600160401b038111156109ec57600080fd5b6109f8888289016105df565b969995985093965092949392505050565b600080600060408486031215610a1e57600080fd5b83356001600160401b0380821115610a3557600080fd5b610a4187838801610720565b94506020860135915080821115610a5757600080fd5b50610a64868287016105df565b9497909650939450505050565b60008060408385031215610a8457600080fd5b610a8d836105c3565b915061098b602084016106a4565b600080600060608486031215610ab057600080fd5b83356001600160401b03811115610ac657600080fd5b610ad286828701610720565b935050610ae1602085016105c3565b91506106f560408501610627565b60008060008060008060a08789031215610b0857600080fd5b610b11876105c3565b9550610b1f602088016105c3565b9450610b2d604088016106a4565b935060608701356001600160401b03811115610b4857600080fd5b610b5489828a01610839565b9094509250610b679050608088016105c3565b90509295509295509295565b6001600160a01b039283168152911660208201526040019056fea164736f6c6343000814000a","sourceMap":"758:3908:2:-:0;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x60806040526004361061012a5760003560e01c8063884673ac116100ab578063a4d91fe91161006f578063a4d91fe9146102e3578063bb43abd914610301578063d7deb4821461030f578063e926cbd11461012f578063f84076621461032f578063fe0dd3711461034f57600080fd5b8063884673ac146102585780639838caa314610280578063987ab9db1461028e5780639d0410ee146102b5578063a24e8a90146102c857600080fd5b8063434698bb116100f2578063434698bb146101e15780635d79ea291461020157806365ce59fa1461022557806374ceeb55146101ae578063821c7be21461023857600080fd5b80630af7d7431461012f5780630b6535d7146101515780630d0dd3991461017157806314b4df4c146101ae57806337c29662146101ce575b600080fd5b34801561013b57600080fd5b5061014f61014a366004610638565b61035d565b005b34801561015d57600080fd5b5061014f61016c3660046106bb565b6103a9565b34801561017d57600080fd5b50600054610191906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156101ba57600080fd5b506101916101c93660046106fe565b503090565b61014f6101dc366004610738565b610432565b3480156101ed57600080fd5b5061014f6101fc3660046107fd565b610478565b34801561020d57600080fd5b5061021760015481565b6040519081526020016101a5565b61014f61023336600461087d565b6104b7565b34801561024457600080fd5b5061014f610253366004610947565b6104fe565b34801561026457600080fd5b5061019173111111111111111111111111111111111111111181565b61014f61014a366004610994565b34801561029a57600080fd5b50731111111111111111111111111111111111111111610191565b61014f6102c3366004610a09565b61053e565b3480156102d457600080fd5b5061014f610253366004610a71565b3480156102ef57600080fd5b506000546001600160a01b0316610191565b61014f6102c3366004610a9b565b34801561031b57600080fd5b5061014f61032a366004610aef565b61057f565b34801561033b57600080fd5b50600254610191906001600160a01b031681565b61014f6101fc3660046107fd565b6000546001600160a01b031633146103a257600054604051630c423fcf60e01b81526103999133916001600160a01b0390911690600401610b73565b60405180910390fd5b5050505050565b33731111111111111111111111111111111111111111146103f557337311111111111111111111111111111111111111116040516359afe8af60e11b8152600401610399929190610b73565b6001600160401b0392909216600155600280546001600160a01b039283166001600160a01b03199182161790915560008054929093169116179055565b6000546001600160a01b0316331461046e57600054604051630c423fcf60e01b81526103999133916001600160a01b0390911690600401610b73565b5050505050505050565b6000546001600160a01b031633146104b457600054604051630c423fcf60e01b81526103999133916001600160a01b0390911690600401610b73565b50565b6000546001600160a01b031633146104f357600054604051630c423fcf60e01b81526103999133916001600160a01b0390911690600401610b73565b505050505050505050565b6000546001600160a01b0316331461053a57600054604051630c423fcf60e01b81526103999133916001600160a01b0390911690600401610b73565b5050565b6000546001600160a01b0316331461057a57600054604051630c423fcf60e01b81526103999133916001600160a01b0390911690600401610b73565b505050565b6000546001600160a01b031633146105bb57600054604051630c423fcf60e01b81526103999133916001600160a01b0390911690600401610b73565b505050505050565b80356001600160401b03811681146105da57600080fd5b919050565b60008083601f8401126105f157600080fd5b5081356001600160401b0381111561060857600080fd5b60208301915083602082850101111561062057600080fd5b9250929050565b803560ff811681146105da57600080fd5b60008060008060006080868803121561065057600080fd5b610659866105c3565b945060208601356001600160401b0381111561067457600080fd5b610680888289016105df565b9095509350610693905060408701610627565b949793965091946060013592915050565b80356001600160a01b03811681146105da57600080fd5b6000806000606084860312156106d057600080fd5b6106d9846105c3565b92506106e7602085016106a4565b91506106f5604085016106a4565b90509250925092565b60006020828403121561071057600080fd5b610719826105c3565b9392505050565b600060c0828403121561073257600080fd5b50919050565b60008060008060008060008060c0898b03121561075457600080fd5b61075d896105c3565b975061076b60208a01610627565b965061077960408a016105c3565b955060608901356001600160401b038082111561079557600080fd5b6107a18c838d01610720565b965060808b01359150808211156107b757600080fd5b6107c38c838d016105df565b909650945060a08b01359150808211156107dc57600080fd5b506107e98b828c016105df565b999c989b5096995094979396929594505050565b60006020828403121561080f57600080fd5b81356001600160401b0381111561082557600080fd5b61083184828501610720565b949350505050565b60008083601f84011261084b57600080fd5b5081356001600160401b0381111561086257600080fd5b6020830191508360208260051b850101111561062057600080fd5b600080600080600080600080600060c08a8c03121561089b57600080fd5b6108a48a6105c3565b98506108b260208b016106a4565b975060408a01356001600160401b03808211156108ce57600080fd5b6108da8d838e01610839565b909950975060608c01359150808211156108f357600080fd5b6108ff8d838e016105df565b909750955060808c013591508082111561091857600080fd5b506109258c828d01610839565b9094509250610938905060a08b016105c3565b90509295985092959850929598565b6000806040838503121561095a57600080fd5b82356001600160401b0381111561097057600080fd5b61097c85828601610720565b92505061098b602084016105c3565b90509250929050565b6000806000806000608086880312156109ac57600080fd5b6109b5866105c3565b94506109c360208701610627565b93506109d1604087016105c3565b925060608601356001600160401b038111156109ec57600080fd5b6109f8888289016105df565b969995985093965092949392505050565b600080600060408486031215610a1e57600080fd5b83356001600160401b0380821115610a3557600080fd5b610a4187838801610720565b94506020860135915080821115610a5757600080fd5b50610a64868287016105df565b9497909650939450505050565b60008060408385031215610a8457600080fd5b610a8d836105c3565b915061098b602084016106a4565b600080600060608486031215610ab057600080fd5b83356001600160401b03811115610ac657600080fd5b610ad286828701610720565b935050610ae1602085016105c3565b91506106f560408501610627565b60008060008060008060a08789031215610b0857600080fd5b610b11876105c3565b9550610b1f602088016105c3565b9450610b2d604088016106a4565b935060608701356001600160401b03811115610b4857600080fd5b610b5489828a01610839565b9094509250610b679050608088016105c3565b90509295509295509295565b6001600160a01b039283168152911660208201526040019056fea164736f6c6343000814000a","sourceMap":"758:3908:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4104:202;;;;;;;;;;-1:-1:-1;4104:202:2;;;;;:::i;:::-;;:::i;:::-;;1061:239;;;;;;;;;;-1:-1:-1;1061:239:2;;;;;:::i;:::-;;:::i;472:44:4:-;;;;;;;;;;-1:-1:-1;472:44:4;;;;-1:-1:-1;;;;;472:44:4;;;;;;-1:-1:-1;;;;;2007:32:5;;;1989:51;;1977:2;1962:18;472:44:4;;;;;;;;4537:127:2;;;;;;;;;;-1:-1:-1;4537:127:2;;;;;:::i;:::-;-1:-1:-1;4652:4:2;;4537:127;3338:304;;;;;;:::i;:::-;;:::i;1614:113::-;;;;;;;;;;-1:-1:-1;1614:113:2;;;;;:::i;:::-;;:::i;885:33::-;;;;;;;;;;;;;;;;;;;4139:25:5;;;4127:2;4112:18;885:33:2;3993:177:5;1958:327:2;;;;;;:::i;:::-;;:::i;2613:127::-;;;;;;;;;;-1:-1:-1;2613:127:2;;;;;:::i;:::-;;:::i;386:79:4:-;;;;;;;;;;;;423:42;386:79;;3081:206:2;;;;;;:::i;910:104:4:-;;;;;;;;;;-1:-1:-1;423:42:4;910:104;;1351:212:2;;;;;;:::i;:::-;;:::i;3693:98::-;;;;;;;;;;-1:-1:-1;3693:98:2;;;;;:::i;1155:138:4:-;;;;;;;;;;-1:-1:-1;1226:12:4;1257:29;-1:-1:-1;;;;;1257:29:4;1155:138;;2336:226:2;;;;;;:::i;2791:239::-;;;;;;;;;;-1:-1:-1;2791:239:2;;;;;:::i;:::-;;:::i;980:29::-;;;;;;;;;;-1:-1:-1;980:29:2;;;;-1:-1:-1;;;;;980:29:2;;;1778:129;;;;;;:::i;4104:202::-;1803:29:4;;-1:-1:-1;;;;;1803:29:4;1789:10;:43;1785:164;;1908:29;;1855:83;;-1:-1:-1;;;1855:83:4;;;;1896:10;;-1:-1:-1;;;;;1908:29:4;;;;1855:83;;;:::i;:::-;;;;;;;;1785:164;4104:202:2;;;;;:::o;1061:239::-;1461:10:4;423:42;1461:24;1457:106;;1529:10;423:42;1508:44;;-1:-1:-1;;;1508:44:4;;;;;;;;;:::i;1457:106::-;-1:-1:-1;;;;;1183:32:2;;;::::1;:18;:32:::0;1225:14:::1;:22:::0;;-1:-1:-1;;;;;1225:22:2;;::::1;-1:-1:-1::0;;;;;;1225:22:2;;::::1;;::::0;;;-1:-1:-1;1257:36:2;;;;;::::1;::::0;::::1;;::::0;;1061:239::o;3338:304::-;1803:29:4;;-1:-1:-1;;;;;1803:29:4;1789:10;:43;1785:164;;1908:29;;1855:83;;-1:-1:-1;;;1855:83:4;;;;1896:10;;-1:-1:-1;;;;;1908:29:4;;;;1855:83;;;:::i;1785:164::-;3338:304:2;;;;;;;;:::o;1614:113::-;1803:29:4;;-1:-1:-1;;;;;1803:29:4;1789:10;:43;1785:164;;1908:29;;1855:83;;-1:-1:-1;;;1855:83:4;;;;1896:10;;-1:-1:-1;;;;;1908:29:4;;;;1855:83;;;:::i;1785:164::-;1614:113:2;:::o;1958:327::-;1803:29:4;;-1:-1:-1;;;;;1803:29:4;1789:10;:43;1785:164;;1908:29;;1855:83;;-1:-1:-1;;;1855:83:4;;;;1896:10;;-1:-1:-1;;;;;1908:29:4;;;;1855:83;;;:::i;1785:164::-;1958:327:2;;;;;;;;;:::o;2613:127::-;1803:29:4;;-1:-1:-1;;;;;1803:29:4;1789:10;:43;1785:164;;1908:29;;1855:83;;-1:-1:-1;;;1855:83:4;;;;1896:10;;-1:-1:-1;;;;;1908:29:4;;;;1855:83;;;:::i;1785:164::-;2613:127:2;;:::o;1351:212::-;1803:29:4;;-1:-1:-1;;;;;1803:29:4;1789:10;:43;1785:164;;1908:29;;1855:83;;-1:-1:-1;;;1855:83:4;;;;1896:10;;-1:-1:-1;;;;;1908:29:4;;;;1855:83;;;:::i;1785:164::-;1351:212:2;;;:::o;2791:239::-;1803:29:4;;-1:-1:-1;;;;;1803:29:4;1789:10;:43;1785:164;;1908:29;;1855:83;;-1:-1:-1;;;1855:83:4;;;;1896:10;;-1:-1:-1;;;;;1908:29:4;;;;1855:83;;;:::i;1785:164::-;2791:239:2;;;;;;:::o;14:171:5:-;81:20;;-1:-1:-1;;;;;130:30:5;;120:41;;110:69;;175:1;172;165:12;110:69;14:171;;;:::o;190:347::-;241:8;251:6;305:3;298:4;290:6;286:17;282:27;272:55;;323:1;320;313:12;272:55;-1:-1:-1;346:20:5;;-1:-1:-1;;;;;378:30:5;;375:50;;;421:1;418;411:12;375:50;458:4;450:6;446:17;434:29;;510:3;503:4;494:6;486;482:19;478:30;475:39;472:59;;;527:1;524;517:12;472:59;190:347;;;;;:::o;542:156::-;608:20;;668:4;657:16;;647:27;;637:55;;688:1;685;678:12;703:620;797:6;805;813;821;829;882:3;870:9;861:7;857:23;853:33;850:53;;;899:1;896;889:12;850:53;922:28;940:9;922:28;:::i;:::-;912:38;;1001:2;990:9;986:18;973:32;-1:-1:-1;;;;;1020:6:5;1017:30;1014:50;;;1060:1;1057;1050:12;1014:50;1099:58;1149:7;1140:6;1129:9;1125:22;1099:58;:::i;:::-;1176:8;;-1:-1:-1;1073:84:5;-1:-1:-1;1230:36:5;;-1:-1:-1;1262:2:5;1247:18;;1230:36;:::i;:::-;703:620;;;;-1:-1:-1;703:620:5;;1313:2;1298:18;1285:32;;703:620;-1:-1:-1;;703:620:5:o;1328:173::-;1396:20;;-1:-1:-1;;;;;1445:31:5;;1435:42;;1425:70;;1491:1;1488;1481:12;1506:332;1582:6;1590;1598;1651:2;1639:9;1630:7;1626:23;1622:32;1619:52;;;1667:1;1664;1657:12;1619:52;1690:28;1708:9;1690:28;:::i;:::-;1680:38;;1737;1771:2;1760:9;1756:18;1737:38;:::i;:::-;1727:48;;1794:38;1828:2;1817:9;1813:18;1794:38;:::i;:::-;1784:48;;1506:332;;;;;:::o;2051:184::-;2109:6;2162:2;2150:9;2141:7;2137:23;2133:32;2130:52;;;2178:1;2175;2168:12;2130:52;2201:28;2219:9;2201:28;:::i;:::-;2191:38;2051:184;-1:-1:-1;;;2051:184:5:o;2240:168::-;2312:5;2357:3;2348:6;2343:3;2339:16;2335:26;2332:46;;;2374:1;2371;2364:12;2332:46;-1:-1:-1;2396:6:5;2240:168;-1:-1:-1;2240:168:5:o;2413:1191::-;2573:6;2581;2589;2597;2605;2613;2621;2629;2682:3;2670:9;2661:7;2657:23;2653:33;2650:53;;;2699:1;2696;2689:12;2650:53;2722:28;2740:9;2722:28;:::i;:::-;2712:38;;2769:36;2801:2;2790:9;2786:18;2769:36;:::i;:::-;2759:46;;2824:37;2857:2;2846:9;2842:18;2824:37;:::i;:::-;2814:47;;2912:2;2901:9;2897:18;2884:32;-1:-1:-1;;;;;2976:2:5;2968:6;2965:14;2962:34;;;2992:1;2989;2982:12;2962:34;3015:79;3086:7;3077:6;3066:9;3062:22;3015:79;:::i;:::-;3005:89;;3147:3;3136:9;3132:19;3119:33;3103:49;;3177:2;3167:8;3164:16;3161:36;;;3193:1;3190;3183:12;3161:36;3232:60;3284:7;3273:8;3262:9;3258:24;3232:60;:::i;:::-;3311:8;;-1:-1:-1;3206:86:5;-1:-1:-1;3399:3:5;3384:19;;3371:33;;-1:-1:-1;3416:16:5;;;3413:36;;;3445:1;3442;3435:12;3413:36;;3484:60;3536:7;3525:8;3514:9;3510:24;3484:60;:::i;:::-;2413:1191;;;;-1:-1:-1;2413:1191:5;;-1:-1:-1;2413:1191:5;;;;;;3563:8;-1:-1:-1;;;2413:1191:5:o;3609:379::-;3706:6;3759:2;3747:9;3738:7;3734:23;3730:32;3727:52;;;3775:1;3772;3765:12;3727:52;3815:9;3802:23;-1:-1:-1;;;;;3840:6:5;3837:30;3834:50;;;3880:1;3877;3870:12;3834:50;3903:79;3974:7;3965:6;3954:9;3950:22;3903:79;:::i;:::-;3893:89;3609:379;-1:-1:-1;;;;3609:379:5:o;4175:395::-;4266:8;4276:6;4330:3;4323:4;4315:6;4311:17;4307:27;4297:55;;4348:1;4345;4338:12;4297:55;-1:-1:-1;4371:20:5;;-1:-1:-1;;;;;4403:30:5;;4400:50;;;4446:1;4443;4436:12;4400:50;4483:4;4475:6;4471:17;4459:29;;4543:3;4536:4;4526:6;4523:1;4519:14;4511:6;4507:27;4503:38;4500:47;4497:67;;;4560:1;4557;4550:12;4575:1375;4780:6;4788;4796;4804;4812;4820;4828;4836;4844;4897:3;4885:9;4876:7;4872:23;4868:33;4865:53;;;4914:1;4911;4904:12;4865:53;4937:28;4955:9;4937:28;:::i;:::-;4927:38;;4984;5018:2;5007:9;5003:18;4984:38;:::i;:::-;4974:48;;5073:2;5062:9;5058:18;5045:32;-1:-1:-1;;;;;5137:2:5;5129:6;5126:14;5123:34;;;5153:1;5150;5143:12;5123:34;5192:98;5282:7;5273:6;5262:9;5258:22;5192:98;:::i;:::-;5309:8;;-1:-1:-1;5166:124:5;-1:-1:-1;5397:2:5;5382:18;;5369:32;;-1:-1:-1;5413:16:5;;;5410:36;;;5442:1;5439;5432:12;5410:36;5481:60;5533:7;5522:8;5511:9;5507:24;5481:60;:::i;:::-;5560:8;;-1:-1:-1;5455:86:5;-1:-1:-1;5648:3:5;5633:19;;5620:33;;-1:-1:-1;5665:16:5;;;5662:36;;;5694:1;5691;5684:12;5662:36;;5733:100;5825:7;5814:8;5803:9;5799:24;5733:100;:::i;:::-;5852:8;;-1:-1:-1;5707:126:5;-1:-1:-1;5906:38:5;;-1:-1:-1;5939:3:5;5924:19;;5906:38;:::i;:::-;5896:48;;4575:1375;;;;;;;;;;;:::o;5955:451::-;6060:6;6068;6121:2;6109:9;6100:7;6096:23;6092:32;6089:52;;;6137:1;6134;6127:12;6089:52;6177:9;6164:23;-1:-1:-1;;;;;6202:6:5;6199:30;6196:50;;;6242:1;6239;6232:12;6196:50;6265:79;6336:7;6327:6;6316:9;6312:22;6265:79;:::i;:::-;6255:89;;;6363:37;6396:2;6385:9;6381:18;6363:37;:::i;:::-;6353:47;;5955:451;;;;;:::o;6411:624::-;6504:6;6512;6520;6528;6536;6589:3;6577:9;6568:7;6564:23;6560:33;6557:53;;;6606:1;6603;6596:12;6557:53;6629:28;6647:9;6629:28;:::i;:::-;6619:38;;6676:36;6708:2;6697:9;6693:18;6676:36;:::i;:::-;6666:46;;6731:37;6764:2;6753:9;6749:18;6731:37;:::i;:::-;6721:47;;6819:2;6808:9;6804:18;6791:32;-1:-1:-1;;;;;6838:6:5;6835:30;6832:50;;;6878:1;6875;6868:12;6832:50;6917:58;6967:7;6958:6;6947:9;6943:22;6917:58;:::i;:::-;6411:624;;;;-1:-1:-1;6411:624:5;;-1:-1:-1;6994:8:5;;6891:84;6411:624;-1:-1:-1;;;6411:624:5:o;7040:687::-;7157:6;7165;7173;7226:2;7214:9;7205:7;7201:23;7197:32;7194:52;;;7242:1;7239;7232:12;7194:52;7282:9;7269:23;-1:-1:-1;;;;;7352:2:5;7344:6;7341:14;7338:34;;;7368:1;7365;7358:12;7338:34;7391:79;7462:7;7453:6;7442:9;7438:22;7391:79;:::i;:::-;7381:89;;7523:2;7512:9;7508:18;7495:32;7479:48;;7552:2;7542:8;7539:16;7536:36;;;7568:1;7565;7558:12;7536:36;;7607:60;7659:7;7648:8;7637:9;7633:24;7607:60;:::i;:::-;7040:687;;7686:8;;-1:-1:-1;7581:86:5;;-1:-1:-1;;;;7040:687:5:o;7732:258::-;7799:6;7807;7860:2;7848:9;7839:7;7835:23;7831:32;7828:52;;;7876:1;7873;7866:12;7828:52;7899:28;7917:9;7899:28;:::i;:::-;7889:38;;7946;7980:2;7969:9;7965:18;7946:38;:::i;7995:521::-;8107:6;8115;8123;8176:2;8164:9;8155:7;8151:23;8147:32;8144:52;;;8192:1;8189;8182:12;8144:52;8232:9;8219:23;-1:-1:-1;;;;;8257:6:5;8254:30;8251:50;;;8297:1;8294;8287:12;8251:50;8320:79;8391:7;8382:6;8371:9;8367:22;8320:79;:::i;:::-;8310:89;;;8418:37;8451:2;8440:9;8436:18;8418:37;:::i;:::-;8408:47;;8474:36;8506:2;8495:9;8491:18;8474:36;:::i;8521:757::-;8640:6;8648;8656;8664;8672;8680;8733:3;8721:9;8712:7;8708:23;8704:33;8701:53;;;8750:1;8747;8740:12;8701:53;8773:28;8791:9;8773:28;:::i;:::-;8763:38;;8820:37;8853:2;8842:9;8838:18;8820:37;:::i;:::-;8810:47;;8876:38;8910:2;8899:9;8895:18;8876:38;:::i;:::-;8866:48;;8965:2;8954:9;8950:18;8937:32;-1:-1:-1;;;;;8984:6:5;8981:30;8978:50;;;9024:1;9021;9014:12;8978:50;9063:98;9153:7;9144:6;9133:9;9129:22;9063:98;:::i;:::-;9180:8;;-1:-1:-1;9037:124:5;-1:-1:-1;9234:38:5;;-1:-1:-1;9267:3:5;9252:19;;9234:38;:::i;:::-;9224:48;;8521:757;;;;;;;;:::o;9283:304::-;-1:-1:-1;;;;;9513:15:5;;;9495:34;;9565:15;;9560:2;9545:18;;9538:43;9445:2;9430:18;;9283:304::o","linkReferences":{}},"methodIdentifiers":{"ROOT_CHAIN()":"884673ac","blueprintOwner()":"f8407662","currentBlueprintId()":"5d79ea29","masterBlueprintServiceManager()":"0d0dd399","masterBlueprintServiceManagerAddress()":"a4d91fe9","onApprove((bytes,(uint64,uint64,uint64,uint64,uint64)),uint64,uint8)":"bb43abd9","onBlueprintCreated(uint64,address,address)":"0b6535d7","onJobCall(uint64,uint8,uint64,bytes)":"9838caa3","onJobResult(uint64,uint8,uint64,(bytes,(uint64,uint64,uint64,uint64,uint64)),bytes,bytes)":"37c29662","onRegister((bytes,(uint64,uint64,uint64,uint64,uint64)),bytes)":"9d0410ee","onReject((bytes,(uint64,uint64,uint64,uint64,uint64)),uint64)":"821c7be2","onRequest(uint64,address,(bytes,(uint64,uint64,uint64,uint64,uint64))[],bytes,address[],uint64)":"65ce59fa","onServiceInitialized(uint64,uint64,address,address[],uint64)":"d7deb482","onServiceTermination(uint64,address)":"a24e8a90","onSlash(uint64,bytes,uint8,uint256)":"0af7d743","onUnappliedSlash(uint64,bytes,uint8,uint256)":"e926cbd1","onUnregister((bytes,(uint64,uint64,uint64,uint64,uint64)))":"434698bb","onUpdatePriceTargets((bytes,(uint64,uint64,uint64,uint64,uint64)))":"fe0dd371","queryDisputeOrigin(uint64)":"14b4df4c","querySlashingOrigin(uint64)":"74ceeb55","rootChain()":"987ab9db"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"masterBlueprintServiceManager\",\"type\":\"address\"}],\"name\":\"OnlyMasterBlueprintServiceManagerAllowed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rootChain\",\"type\":\"address\"}],\"name\":\"OnlyRootChainAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ROOT_CHAIN\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"blueprintOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentBlueprintId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"masterBlueprintServiceManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"masterBlueprintServiceManagerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"mbsm\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"ecdsaPublicKey\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"uint64\",\"name\":\"cpu\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"mem\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"storage_hdd\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"storage_ssd\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"storage_nvme\",\"type\":\"uint64\"}],\"internalType\":\"struct ServiceOperators.PriceTargets\",\"name\":\"priceTargets\",\"type\":\"tuple\"}],\"internalType\":\"struct ServiceOperators.OperatorPreferences\",\"name\":\"operator\",\"type\":\"tuple\"},{\"internalType\":\"uint64\",\"name\":\"requestId\",\"type\":\"uint64\"},{\"internalType\":\"uint8\",\"name\":\"restakingPercent\",\"type\":\"uint8\"}],\"name\":\"onApprove\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"blueprintId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"mbsm\",\"type\":\"address\"}],\"name\":\"onBlueprintCreated\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"serviceId\",\"type\":\"uint64\"},{\"internalType\":\"uint8\",\"name\":\"job\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"jobCallId\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"inputs\",\"type\":\"bytes\"}],\"name\":\"onJobCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"serviceId\",\"type\":\"uint64\"},{\"internalType\":\"uint8\",\"name\":\"job\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"jobCallId\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"ecdsaPublicKey\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"uint64\",\"name\":\"cpu\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"mem\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"storage_hdd\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"storage_ssd\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"storage_nvme\",\"type\":\"uint64\"}],\"internalType\":\"struct ServiceOperators.PriceTargets\",\"name\":\"priceTargets\",\"type\":\"tuple\"}],\"internalType\":\"struct ServiceOperators.OperatorPreferences\",\"name\":\"operator\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"inputs\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"outputs\",\"type\":\"bytes\"}],\"name\":\"onJobResult\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"ecdsaPublicKey\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"uint64\",\"name\":\"cpu\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"mem\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"storage_hdd\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"storage_ssd\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"storage_nvme\",\"type\":\"uint64\"}],\"internalType\":\"struct ServiceOperators.PriceTargets\",\"name\":\"priceTargets\",\"type\":\"tuple\"}],\"internalType\":\"struct ServiceOperators.OperatorPreferences\",\"name\":\"operator\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"registrationInputs\",\"type\":\"bytes\"}],\"name\":\"onRegister\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"ecdsaPublicKey\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"uint64\",\"name\":\"cpu\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"mem\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"storage_hdd\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"storage_ssd\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"storage_nvme\",\"type\":\"uint64\"}],\"internalType\":\"struct ServiceOperators.PriceTargets\",\"name\":\"priceTargets\",\"type\":\"tuple\"}],\"internalType\":\"struct ServiceOperators.OperatorPreferences\",\"name\":\"operator\",\"type\":\"tuple\"},{\"internalType\":\"uint64\",\"name\":\"requestId\",\"type\":\"uint64\"}],\"name\":\"onReject\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"requestId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"ecdsaPublicKey\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"uint64\",\"name\":\"cpu\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"mem\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"storage_hdd\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"storage_ssd\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"storage_nvme\",\"type\":\"uint64\"}],\"internalType\":\"struct ServiceOperators.PriceTargets\",\"name\":\"priceTargets\",\"type\":\"tuple\"}],\"internalType\":\"struct ServiceOperators.OperatorPreferences[]\",\"name\":\"operators\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"requestInputs\",\"type\":\"bytes\"},{\"internalType\":\"address[]\",\"name\":\"permittedCallers\",\"type\":\"address[]\"},{\"internalType\":\"uint64\",\"name\":\"ttl\",\"type\":\"uint64\"}],\"name\":\"onRequest\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"requestId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"serviceId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"permittedCallers\",\"type\":\"address[]\"},{\"internalType\":\"uint64\",\"name\":\"ttl\",\"type\":\"uint64\"}],\"name\":\"onServiceInitialized\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"serviceId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"onServiceTermination\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"serviceId\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"offender\",\"type\":\"bytes\"},{\"internalType\":\"uint8\",\"name\":\"slashPercent\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"totalPayout\",\"type\":\"uint256\"}],\"name\":\"onSlash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"serviceId\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"offender\",\"type\":\"bytes\"},{\"internalType\":\"uint8\",\"name\":\"slashPercent\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"totalPayout\",\"type\":\"uint256\"}],\"name\":\"onUnappliedSlash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"ecdsaPublicKey\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"uint64\",\"name\":\"cpu\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"mem\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"storage_hdd\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"storage_ssd\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"storage_nvme\",\"type\":\"uint64\"}],\"internalType\":\"struct ServiceOperators.PriceTargets\",\"name\":\"priceTargets\",\"type\":\"tuple\"}],\"internalType\":\"struct ServiceOperators.OperatorPreferences\",\"name\":\"operator\",\"type\":\"tuple\"}],\"name\":\"onUnregister\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"ecdsaPublicKey\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"uint64\",\"name\":\"cpu\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"mem\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"storage_hdd\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"storage_ssd\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"storage_nvme\",\"type\":\"uint64\"}],\"internalType\":\"struct ServiceOperators.PriceTargets\",\"name\":\"priceTargets\",\"type\":\"tuple\"}],\"internalType\":\"struct ServiceOperators.OperatorPreferences\",\"name\":\"operator\",\"type\":\"tuple\"}],\"name\":\"onUpdatePriceTargets\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"name\":\"queryDisputeOrigin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"disputeOrigin\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"name\":\"querySlashingOrigin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"slashingOrigin\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rootChain\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"rootChainAddress\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Tangle Network Team\",\"details\":\"This contract acts as a manager for the lifecycle of a Blueprint Instance, facilitating various stages such as registration, service requests, job execution, and job result handling. It is designed to be used by the service blueprint designer (gadget developer) and integrates with the RootChain for permissioned operations. Each function serves as a hook for different lifecycle events, and reverting any of these functions interrupts the process flow.\",\"kind\":\"dev\",\"methods\":{\"masterBlueprintServiceManagerAddress()\":{\"details\":\"Get the master blueprint service manager address\",\"returns\":{\"mbsm\":\"The address of the master blueprint service manager\"}},\"onApprove((bytes,(uint64,uint64,uint64,uint64,uint64)),uint64,uint8)\":{\"details\":\"Hook for service request approval. Called when a service request is approved by an operator.\",\"params\":{\"operator\":\"The operator's details.\",\"requestId\":\"The ID of the request.\",\"restakingPercent\":\"The percentage of the restaking amount (0-100).\"}},\"onBlueprintCreated(uint64,address,address)\":{\"details\":\"Hook to handle blueprint creation. Gets called by the root chain when a new blueprint is created. Could be a good place to store the master blueprint service manager address or any other blueprint related data.\",\"params\":{\"blueprintId\":\"The unique identifier for the blueprint.\",\"mbsm\":\"The address of the master blueprint service manager.\",\"owner\":\"The address of the blueprint owner.\"}},\"onJobCall(uint64,uint8,uint64,bytes)\":{\"details\":\"Hook for job calls on the service. Called when a job is called within the service context.\",\"params\":{\"inputs\":\"Inputs required for the job execution in bytes format.\",\"job\":\"The job identifier.\",\"jobCallId\":\"A unique ID for the job call.\",\"serviceId\":\"The ID of the service where the job is called.\"}},\"onJobResult(uint64,uint8,uint64,(bytes,(uint64,uint64,uint64,uint64,uint64)),bytes,bytes)\":{\"details\":\"Hook for handling job result. Called when operators send the result of a job execution.\",\"params\":{\"inputs\":\"Inputs used for the job execution in bytes format.\",\"job\":\"The job identifier.\",\"jobCallId\":\"The unique ID for the job call.\",\"operator\":\"The operator sending the result in bytes format.\",\"outputs\":\"Outputs resulting from the job execution in bytes format.\",\"serviceId\":\"The ID of the service related to the job.\"}},\"onRegister((bytes,(uint64,uint64,uint64,uint64,uint64)),bytes)\":{\"details\":\"Hook for service operator registration. Called when a service operator attempts to register with the blueprint.\",\"params\":{\"operator\":\"The operator's details.\",\"registrationInputs\":\"Inputs required for registration in bytes format.\"}},\"onReject((bytes,(uint64,uint64,uint64,uint64,uint64)),uint64)\":{\"details\":\"Hook for service request rejection. Called when a service request is rejected by an operator.\",\"params\":{\"operator\":\"The operator's details.\",\"requestId\":\"The ID of the request.\"}},\"onRequest(uint64,address,(bytes,(uint64,uint64,uint64,uint64,uint64))[],bytes,address[],uint64)\":{\"details\":\"Hook for service instance requests. Called when a user requests a service instance from the blueprint but this does not mean the service is initiated yet. To get notified when the service is initiated, implement the `onServiceInitialized` hook.\",\"params\":{\"operators\":\"The list of operators to be considered for the service.\",\"permittedCallers\":\"The list of permitted callers for the service.\",\"requestId\":\"The ID of the request.\",\"requestInputs\":\"The inputs required for the service request in bytes format.\",\"requester\":\"The address of the service requester.\",\"ttl\":\"The time-to-live for the service.\"}},\"onServiceInitialized(uint64,uint64,address,address[],uint64)\":{\"details\":\"Hook for service initialization. Called when a service is initialized. This hook is called after the service is approved from all of the operators.\",\"params\":{\"owner\":\"The owner of the service.\",\"permittedCallers\":\"The list of permitted callers for the service.\",\"requestId\":\"The ID of the request.\",\"serviceId\":\"The ID of the service.\",\"ttl\":\"The time-to-live for the service.\"}},\"onServiceTermination(uint64,address)\":{\"details\":\"Hook for service termination. Called when a service is terminated.\",\"params\":{\"owner\":\"The owner of the service.\",\"serviceId\":\"The ID of the service to be terminated.\"}},\"onSlash(uint64,bytes,uint8,uint256)\":{\"details\":\"Hook for handling applied slashes. Called when a slash is applied to an offender.\",\"params\":{\"offender\":\"The offender's details in bytes format.\",\"serviceId\":\"The ID of the service related to the slash.\",\"slashPercent\":\"The percentage of the slash.\",\"totalPayout\":\"The total payout amount in wei.\"}},\"onUnappliedSlash(uint64,bytes,uint8,uint256)\":{\"details\":\"Hook for handling unapplied slashes. Called when a slash is queued and still not yet applied to an offender.\",\"params\":{\"offender\":\"The offender's details in bytes format.\",\"serviceId\":\"The ID of the service related to the slash.\",\"slashPercent\":\"The percentage of the slash.\",\"totalPayout\":\"The total payout amount in wei.\"}},\"onUnregister((bytes,(uint64,uint64,uint64,uint64,uint64)))\":{\"details\":\"Hook for service operator unregistration. Called when a service operator attempts to unregister from the blueprint.\",\"params\":{\"operator\":\"The operator's details.\"}},\"onUpdatePriceTargets((bytes,(uint64,uint64,uint64,uint64,uint64)))\":{\"details\":\"Hook for updating operator's Price Targets. Called when an operator updates their price targets.\",\"params\":{\"operator\":\"The operator's details with the to be updated price targets.\"}},\"queryDisputeOrigin(uint64)\":{\"details\":\"Query the dispute origin for a service. This mainly used by the runtime to determine the allowed account that can dispute an unapplied slash and remove it. by default, the service manager is the only account that can dispute a service. override this function to allow other accounts to dispute a service.\",\"params\":{\"serviceId\":\"The ID of the service.\"},\"returns\":{\"disputeOrigin\":\"The account that can dispute the unapplied slash for that service\"}},\"querySlashingOrigin(uint64)\":{\"details\":\"Query the slashing origin for a service. This mainly used by the runtime to determine the allowed account that can slash a service. by default, the service manager is the only account that can slash a service. override this function to allow other accounts to slash a service.\",\"params\":{\"serviceId\":\"The ID of the service.\"},\"returns\":{\"slashingOrigin\":\"The account that can slash the offender.\"}},\"rootChain()\":{\"details\":\"Get the root chain address\",\"returns\":{\"rootChainAddress\":\"The address of the root chain\"}}},\"stateVariables\":{\"blueprintOwner\":{\"details\":\"The address of the owner of the blueprint\"},\"currentBlueprintId\":{\"details\":\"The Current Blueprint Id\"}},\"title\":\"BlueprintServiceManagerBase\",\"version\":1},\"userdoc\":{\"errors\":{\"OnlyMasterBlueprintServiceManagerAllowed(address,address)\":[{\"notice\":\"Error message for unauthorized access\"}],\"OnlyRootChainAllowed(address,address)\":[{\"notice\":\"Error message for unauthorized access\"}]},\"kind\":\"user\",\"methods\":{\"ROOT_CHAIN()\":{\"notice\":\"The address of the root chain\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/BlueprintServiceManagerBase.sol\":\"BlueprintServiceManagerBase\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-contracts-5.1.0/=dependencies/@openzeppelin-contracts-5.1.0/\",\":@openzeppelin/contracts/=dependencies/@openzeppelin-contracts-5.1.0/\",\":forge-std-1.9.4/=dependencies/forge-std-1.9.4/src/\",\":forge-std/=dependencies/forge-std-1.9.4/src/\"]},\"sources\":{\"dependencies/@openzeppelin-contracts-5.1.0/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"dependencies/@openzeppelin-contracts-5.1.0/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"src/BlueprintServiceManagerBase.sol\":{\"keccak256\":\"0xcc62b5f72456af69048c52d093ec7a67a06f0db104974510241ad98967b008cb\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://970c255006da866256a4dcf79482cc0a1a3514392bd9c200f0760d18c7c69908\",\"dweb:/ipfs/QmNaEvGKzA7BHAtuBDYfw6cKGY7s9e9eQ6Q5zyEmKwj8w1\"]},\"src/IBlueprintServiceManager.sol\":{\"keccak256\":\"0xc1fc793073723d5d0c6ab178daa3bb4ac5c31ffc5d832f04fa0a5eb48df7b649\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://5df9937f66ffe1ceca114ae0bec99dc0e18b7d64782d8af157728dc1372e25f8\",\"dweb:/ipfs/QmUY72DZzLi3icmMpiFEiUYV2nboDabUKpYJguAXf2wZyt\"]},\"src/Permissions.sol\":{\"keccak256\":\"0x53c50fb8c3a429917c43460be3177ef0e117241e116279a7c7138c771a5b3dfb\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://c46f4f98974eff1a102f1393b1c1ba5d1221cfe0ed69e2abdd8efca5794928c8\",\"dweb:/ipfs/QmXn2YZ7yzifLywMwHZAm9tWHp6qFAS66g3QA6v5ee4fjq\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.20+commit.a1b79de6"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"caller","type":"address"},{"internalType":"address","name":"masterBlueprintServiceManager","type":"address"}],"type":"error","name":"OnlyMasterBlueprintServiceManagerAllowed"},{"inputs":[{"internalType":"address","name":"caller","type":"address"},{"internalType":"address","name":"rootChain","type":"address"}],"type":"error","name":"OnlyRootChainAllowed"},{"inputs":[],"stateMutability":"view","type":"function","name":"ROOT_CHAIN","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"blueprintOwner","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"currentBlueprintId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"masterBlueprintServiceManager","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"masterBlueprintServiceManagerAddress","outputs":[{"internalType":"address","name":"mbsm","type":"address"}]},{"inputs":[{"internalType":"struct ServiceOperators.OperatorPreferences","name":"operator","type":"tuple","components":[{"internalType":"bytes","name":"ecdsaPublicKey","type":"bytes"},{"internalType":"struct ServiceOperators.PriceTargets","name":"priceTargets","type":"tuple","components":[{"internalType":"uint64","name":"cpu","type":"uint64"},{"internalType":"uint64","name":"mem","type":"uint64"},{"internalType":"uint64","name":"storage_hdd","type":"uint64"},{"internalType":"uint64","name":"storage_ssd","type":"uint64"},{"internalType":"uint64","name":"storage_nvme","type":"uint64"}]}]},{"internalType":"uint64","name":"requestId","type":"uint64"},{"internalType":"uint8","name":"restakingPercent","type":"uint8"}],"stateMutability":"payable","type":"function","name":"onApprove"},{"inputs":[{"internalType":"uint64","name":"blueprintId","type":"uint64"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"mbsm","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"onBlueprintCreated"},{"inputs":[{"internalType":"uint64","name":"serviceId","type":"uint64"},{"internalType":"uint8","name":"job","type":"uint8"},{"internalType":"uint64","name":"jobCallId","type":"uint64"},{"internalType":"bytes","name":"inputs","type":"bytes"}],"stateMutability":"payable","type":"function","name":"onJobCall"},{"inputs":[{"internalType":"uint64","name":"serviceId","type":"uint64"},{"internalType":"uint8","name":"job","type":"uint8"},{"internalType":"uint64","name":"jobCallId","type":"uint64"},{"internalType":"struct ServiceOperators.OperatorPreferences","name":"operator","type":"tuple","components":[{"internalType":"bytes","name":"ecdsaPublicKey","type":"bytes"},{"internalType":"struct ServiceOperators.PriceTargets","name":"priceTargets","type":"tuple","components":[{"internalType":"uint64","name":"cpu","type":"uint64"},{"internalType":"uint64","name":"mem","type":"uint64"},{"internalType":"uint64","name":"storage_hdd","type":"uint64"},{"internalType":"uint64","name":"storage_ssd","type":"uint64"},{"internalType":"uint64","name":"storage_nvme","type":"uint64"}]}]},{"internalType":"bytes","name":"inputs","type":"bytes"},{"internalType":"bytes","name":"outputs","type":"bytes"}],"stateMutability":"payable","type":"function","name":"onJobResult"},{"inputs":[{"internalType":"struct ServiceOperators.OperatorPreferences","name":"operator","type":"tuple","components":[{"internalType":"bytes","name":"ecdsaPublicKey","type":"bytes"},{"internalType":"struct ServiceOperators.PriceTargets","name":"priceTargets","type":"tuple","components":[{"internalType":"uint64","name":"cpu","type":"uint64"},{"internalType":"uint64","name":"mem","type":"uint64"},{"internalType":"uint64","name":"storage_hdd","type":"uint64"},{"internalType":"uint64","name":"storage_ssd","type":"uint64"},{"internalType":"uint64","name":"storage_nvme","type":"uint64"}]}]},{"internalType":"bytes","name":"registrationInputs","type":"bytes"}],"stateMutability":"payable","type":"function","name":"onRegister"},{"inputs":[{"internalType":"struct ServiceOperators.OperatorPreferences","name":"operator","type":"tuple","components":[{"internalType":"bytes","name":"ecdsaPublicKey","type":"bytes"},{"internalType":"struct ServiceOperators.PriceTargets","name":"priceTargets","type":"tuple","components":[{"internalType":"uint64","name":"cpu","type":"uint64"},{"internalType":"uint64","name":"mem","type":"uint64"},{"internalType":"uint64","name":"storage_hdd","type":"uint64"},{"internalType":"uint64","name":"storage_ssd","type":"uint64"},{"internalType":"uint64","name":"storage_nvme","type":"uint64"}]}]},{"internalType":"uint64","name":"requestId","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"onReject"},{"inputs":[{"internalType":"uint64","name":"requestId","type":"uint64"},{"internalType":"address","name":"requester","type":"address"},{"internalType":"struct ServiceOperators.OperatorPreferences[]","name":"operators","type":"tuple[]","components":[{"internalType":"bytes","name":"ecdsaPublicKey","type":"bytes"},{"internalType":"struct ServiceOperators.PriceTargets","name":"priceTargets","type":"tuple","components":[{"internalType":"uint64","name":"cpu","type":"uint64"},{"internalType":"uint64","name":"mem","type":"uint64"},{"internalType":"uint64","name":"storage_hdd","type":"uint64"},{"internalType":"uint64","name":"storage_ssd","type":"uint64"},{"internalType":"uint64","name":"storage_nvme","type":"uint64"}]}]},{"internalType":"bytes","name":"requestInputs","type":"bytes"},{"internalType":"address[]","name":"permittedCallers","type":"address[]"},{"internalType":"uint64","name":"ttl","type":"uint64"}],"stateMutability":"payable","type":"function","name":"onRequest"},{"inputs":[{"internalType":"uint64","name":"requestId","type":"uint64"},{"internalType":"uint64","name":"serviceId","type":"uint64"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address[]","name":"permittedCallers","type":"address[]"},{"internalType":"uint64","name":"ttl","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"onServiceInitialized"},{"inputs":[{"internalType":"uint64","name":"serviceId","type":"uint64"},{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"onServiceTermination"},{"inputs":[{"internalType":"uint64","name":"serviceId","type":"uint64"},{"internalType":"bytes","name":"offender","type":"bytes"},{"internalType":"uint8","name":"slashPercent","type":"uint8"},{"internalType":"uint256","name":"totalPayout","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"onSlash"},{"inputs":[{"internalType":"uint64","name":"serviceId","type":"uint64"},{"internalType":"bytes","name":"offender","type":"bytes"},{"internalType":"uint8","name":"slashPercent","type":"uint8"},{"internalType":"uint256","name":"totalPayout","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"onUnappliedSlash"},{"inputs":[{"internalType":"struct ServiceOperators.OperatorPreferences","name":"operator","type":"tuple","components":[{"internalType":"bytes","name":"ecdsaPublicKey","type":"bytes"},{"internalType":"struct ServiceOperators.PriceTargets","name":"priceTargets","type":"tuple","components":[{"internalType":"uint64","name":"cpu","type":"uint64"},{"internalType":"uint64","name":"mem","type":"uint64"},{"internalType":"uint64","name":"storage_hdd","type":"uint64"},{"internalType":"uint64","name":"storage_ssd","type":"uint64"},{"internalType":"uint64","name":"storage_nvme","type":"uint64"}]}]}],"stateMutability":"nonpayable","type":"function","name":"onUnregister"},{"inputs":[{"internalType":"struct ServiceOperators.OperatorPreferences","name":"operator","type":"tuple","components":[{"internalType":"bytes","name":"ecdsaPublicKey","type":"bytes"},{"internalType":"struct ServiceOperators.PriceTargets","name":"priceTargets","type":"tuple","components":[{"internalType":"uint64","name":"cpu","type":"uint64"},{"internalType":"uint64","name":"mem","type":"uint64"},{"internalType":"uint64","name":"storage_hdd","type":"uint64"},{"internalType":"uint64","name":"storage_ssd","type":"uint64"},{"internalType":"uint64","name":"storage_nvme","type":"uint64"}]}]}],"stateMutability":"payable","type":"function","name":"onUpdatePriceTargets"},{"inputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function","name":"queryDisputeOrigin","outputs":[{"internalType":"address","name":"disputeOrigin","type":"address"}]},{"inputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function","name":"querySlashingOrigin","outputs":[{"internalType":"address","name":"slashingOrigin","type":"address"}]},{"inputs":[],"stateMutability":"pure","type":"function","name":"rootChain","outputs":[{"internalType":"address","name":"rootChainAddress","type":"address"}]}],"devdoc":{"kind":"dev","methods":{"masterBlueprintServiceManagerAddress()":{"details":"Get the master blueprint service manager address","returns":{"mbsm":"The address of the master blueprint service manager"}},"onApprove((bytes,(uint64,uint64,uint64,uint64,uint64)),uint64,uint8)":{"details":"Hook for service request approval. Called when a service request is approved by an operator.","params":{"operator":"The operator's details.","requestId":"The ID of the request.","restakingPercent":"The percentage of the restaking amount (0-100)."}},"onBlueprintCreated(uint64,address,address)":{"details":"Hook to handle blueprint creation. Gets called by the root chain when a new blueprint is created. Could be a good place to store the master blueprint service manager address or any other blueprint related data.","params":{"blueprintId":"The unique identifier for the blueprint.","mbsm":"The address of the master blueprint service manager.","owner":"The address of the blueprint owner."}},"onJobCall(uint64,uint8,uint64,bytes)":{"details":"Hook for job calls on the service. Called when a job is called within the service context.","params":{"inputs":"Inputs required for the job execution in bytes format.","job":"The job identifier.","jobCallId":"A unique ID for the job call.","serviceId":"The ID of the service where the job is called."}},"onJobResult(uint64,uint8,uint64,(bytes,(uint64,uint64,uint64,uint64,uint64)),bytes,bytes)":{"details":"Hook for handling job result. Called when operators send the result of a job execution.","params":{"inputs":"Inputs used for the job execution in bytes format.","job":"The job identifier.","jobCallId":"The unique ID for the job call.","operator":"The operator sending the result in bytes format.","outputs":"Outputs resulting from the job execution in bytes format.","serviceId":"The ID of the service related to the job."}},"onRegister((bytes,(uint64,uint64,uint64,uint64,uint64)),bytes)":{"details":"Hook for service operator registration. Called when a service operator attempts to register with the blueprint.","params":{"operator":"The operator's details.","registrationInputs":"Inputs required for registration in bytes format."}},"onReject((bytes,(uint64,uint64,uint64,uint64,uint64)),uint64)":{"details":"Hook for service request rejection. Called when a service request is rejected by an operator.","params":{"operator":"The operator's details.","requestId":"The ID of the request."}},"onRequest(uint64,address,(bytes,(uint64,uint64,uint64,uint64,uint64))[],bytes,address[],uint64)":{"details":"Hook for service instance requests. Called when a user requests a service instance from the blueprint but this does not mean the service is initiated yet. To get notified when the service is initiated, implement the `onServiceInitialized` hook.","params":{"operators":"The list of operators to be considered for the service.","permittedCallers":"The list of permitted callers for the service.","requestId":"The ID of the request.","requestInputs":"The inputs required for the service request in bytes format.","requester":"The address of the service requester.","ttl":"The time-to-live for the service."}},"onServiceInitialized(uint64,uint64,address,address[],uint64)":{"details":"Hook for service initialization. Called when a service is initialized. This hook is called after the service is approved from all of the operators.","params":{"owner":"The owner of the service.","permittedCallers":"The list of permitted callers for the service.","requestId":"The ID of the request.","serviceId":"The ID of the service.","ttl":"The time-to-live for the service."}},"onServiceTermination(uint64,address)":{"details":"Hook for service termination. Called when a service is terminated.","params":{"owner":"The owner of the service.","serviceId":"The ID of the service to be terminated."}},"onSlash(uint64,bytes,uint8,uint256)":{"details":"Hook for handling applied slashes. Called when a slash is applied to an offender.","params":{"offender":"The offender's details in bytes format.","serviceId":"The ID of the service related to the slash.","slashPercent":"The percentage of the slash.","totalPayout":"The total payout amount in wei."}},"onUnappliedSlash(uint64,bytes,uint8,uint256)":{"details":"Hook for handling unapplied slashes. Called when a slash is queued and still not yet applied to an offender.","params":{"offender":"The offender's details in bytes format.","serviceId":"The ID of the service related to the slash.","slashPercent":"The percentage of the slash.","totalPayout":"The total payout amount in wei."}},"onUnregister((bytes,(uint64,uint64,uint64,uint64,uint64)))":{"details":"Hook for service operator unregistration. Called when a service operator attempts to unregister from the blueprint.","params":{"operator":"The operator's details."}},"onUpdatePriceTargets((bytes,(uint64,uint64,uint64,uint64,uint64)))":{"details":"Hook for updating operator's Price Targets. Called when an operator updates their price targets.","params":{"operator":"The operator's details with the to be updated price targets."}},"queryDisputeOrigin(uint64)":{"details":"Query the dispute origin for a service. This mainly used by the runtime to determine the allowed account that can dispute an unapplied slash and remove it. by default, the service manager is the only account that can dispute a service. override this function to allow other accounts to dispute a service.","params":{"serviceId":"The ID of the service."},"returns":{"disputeOrigin":"The account that can dispute the unapplied slash for that service"}},"querySlashingOrigin(uint64)":{"details":"Query the slashing origin for a service. This mainly used by the runtime to determine the allowed account that can slash a service. by default, the service manager is the only account that can slash a service. override this function to allow other accounts to slash a service.","params":{"serviceId":"The ID of the service."},"returns":{"slashingOrigin":"The account that can slash the offender."}},"rootChain()":{"details":"Get the root chain address","returns":{"rootChainAddress":"The address of the root chain"}}},"version":1},"userdoc":{"kind":"user","methods":{"ROOT_CHAIN()":{"notice":"The address of the root chain"}},"version":1}},"settings":{"remappings":["@openzeppelin-contracts-5.1.0/=dependencies/@openzeppelin-contracts-5.1.0/","@openzeppelin/contracts/=dependencies/@openzeppelin-contracts-5.1.0/","forge-std-1.9.4/=dependencies/forge-std-1.9.4/src/","forge-std/=dependencies/forge-std-1.9.4/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"none"},"compilationTarget":{"src/BlueprintServiceManagerBase.sol":"BlueprintServiceManagerBase"},"evmVersion":"paris","libraries":{}},"sources":{"dependencies/@openzeppelin-contracts-5.1.0/utils/introspection/ERC165.sol":{"keccak256":"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa","urls":["bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287","dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p"],"license":"MIT"},"dependencies/@openzeppelin-contracts-5.1.0/utils/introspection/IERC165.sol":{"keccak256":"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8","urls":["bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621","dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL"],"license":"MIT"},"src/BlueprintServiceManagerBase.sol":{"keccak256":"0xcc62b5f72456af69048c52d093ec7a67a06f0db104974510241ad98967b008cb","urls":["bzz-raw://970c255006da866256a4dcf79482cc0a1a3514392bd9c200f0760d18c7c69908","dweb:/ipfs/QmNaEvGKzA7BHAtuBDYfw6cKGY7s9e9eQ6Q5zyEmKwj8w1"],"license":"UNLICENSED"},"src/IBlueprintServiceManager.sol":{"keccak256":"0xc1fc793073723d5d0c6ab178daa3bb4ac5c31ffc5d832f04fa0a5eb48df7b649","urls":["bzz-raw://5df9937f66ffe1ceca114ae0bec99dc0e18b7d64782d8af157728dc1372e25f8","dweb:/ipfs/QmUY72DZzLi3icmMpiFEiUYV2nboDabUKpYJguAXf2wZyt"],"license":"UNLICENSED"},"src/Permissions.sol":{"keccak256":"0x53c50fb8c3a429917c43460be3177ef0e117241e116279a7c7138c771a5b3dfb","urls":["bzz-raw://c46f4f98974eff1a102f1393b1c1ba5d1221cfe0ed69e2abdd8efca5794928c8","dweb:/ipfs/QmXn2YZ7yzifLywMwHZAm9tWHp6qFAS66g3QA6v5ee4fjq"],"license":"UNLICENSED"}},"version":1},"id":2}