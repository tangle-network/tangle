// This file is part of Tangle.
// Copyright (C) 2022-2023 Webb Technologies Inc.
//
// Tangle is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// Tangle is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with Tangle.  If not, see <http://www.gnu.org/licenses/>.

//! Autogenerated weights for module_transaction_pause
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 3.0.0
//! DATE: 2021-08-16, STEPS: `[50, ]`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 128

// Executed Command:
// target/release/tangle
// benchmark
// --chain=dev
// --steps=50
// --repeat=20
// --pallet=module_transaction_pause
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(clippy::unnecessary_cast)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use sp_std::marker::PhantomData;

/// Weight functions needed for roles pallet.
pub trait WeightInfo {
	fn assign_role() -> Weight;
	fn clear_role() -> Weight;
}

/// Weights for roles pallet.
pub struct TestWeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for TestWeightInfo<T> {
	fn assign_role() -> Weight {
		Weight::from_parts(0, 0)
	}
	fn clear_role() -> Weight {
		Weight::from_parts(0, 0)
	}
}

// For backwards compatibility and tests
impl WeightInfo for () {
	fn assign_role() -> Weight {
		Weight::from_parts(0, 0)
	}
	fn clear_role() -> Weight {
		Weight::from_parts(0, 0)
	}
}