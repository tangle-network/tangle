// This file is part of Substrate.

// Copyright (C) 2022 Parity Technologies (UK) Ltd.
// SPDX-License-Identifier: Apache-2.0

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(clippy::unnecessary_cast, clippy::missing_docs_in_private_items)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use sp_std::marker::PhantomData;

/// Weight functions needed for pallet_nomination_pools.
pub trait WeightInfo {
	fn bond() -> Weight;
	fn unbond() -> Weight;
	fn unbond_deposit() -> Weight;
	fn pool_withdraw_unbonded(s: u32, ) -> Weight;
	fn withdraw_unbonded_update(s: u32, ) -> Weight;
	fn withdraw_deposit() -> Weight;
	fn withdraw_free_balance() -> Weight;
	fn create() -> Weight;
	fn nominate(n: u32, ) -> Weight;
	fn payout_rewards(n: u32, ) -> Weight;
	fn process_payouts(n: u32, ) -> Weight;
	fn set_configs() -> Weight;
	fn chill() -> Weight;
	fn destroy() -> Weight;
	fn mutate() -> Weight;
}

/// Weights for pallet_nomination_pools using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	// Storage: NominationPools BondedPools (r:1 w:1)
	// Proof: NominationPools BondedPools (max_values: None, max_size: Some(462), added: 2937, mode: MaxEncodedLen)
	// Storage: Staking Bonded (r:1 w:0)
	// Proof: Staking Bonded (max_values: None, max_size: Some(72), added: 2547, mode: MaxEncodedLen)
	// Storage: Staking Ledger (r:1 w:1)
	// Proof: Staking Ledger (max_values: None, max_size: Some(1091), added: 3566, mode: MaxEncodedLen)
	// Storage: Fungibles Tokens (r:1 w:1)
	// Proof: Fungibles Tokens (max_values: None, max_size: Some(875), added: 3350, mode: MaxEncodedLen)
	// Storage: NominationPools MinJoinBond (r:1 w:0)
	// Proof: NominationPools MinJoinBond (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: Balances Freezes (r:1 w:0)
	// Proof: Balances Freezes (max_values: None, max_size: Some(49), added: 2524, mode: MaxEncodedLen)
	// Storage: VoterList ListNodes (r:3 w:3)
	// Proof: VoterList ListNodes (max_values: None, max_size: Some(154), added: 2629, mode: MaxEncodedLen)
	// Storage: VoterList ListBags (r:2 w:2)
	// Proof: VoterList ListBags (max_values: None, max_size: Some(82), added: 2557, mode: MaxEncodedLen)
	// Storage: Fungibles Collections (r:1 w:1)
	// Proof: Fungibles Collections (max_values: None, max_size: Some(478), added: 2953, mode: MaxEncodedLen)
	// Storage: Fungibles UnmintableAssetIds (r:1 w:0)
	// Proof: Fungibles UnmintableAssetIds (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
	// Storage: Fungibles CollectionAccounts (r:1 w:1)
	// Proof: Fungibles CollectionAccounts (max_values: None, max_size: Some(456), added: 2931, mode: MaxEncodedLen)
	// Storage: Fungibles TokenAccounts (r:1 w:1)
	// Proof: Fungibles TokenAccounts (max_values: None, max_size: Some(790), added: 3265, mode: MaxEncodedLen)
	fn bond() -> Weight {
		Weight::from_parts(177_000_000 as u64, 0)
			.saturating_add(T::DbWeight::get().reads(17 as u64))
			.saturating_add(T::DbWeight::get().writes(13 as u64))
	}
	// Storage: NominationPools UnbondingMembers (r:1 w:1)
	// Proof: NominationPools UnbondingMembers (max_values: None, max_size: Some(213), added: 2688, mode: MaxEncodedLen)
	// Storage: NominationPools BondedPools (r:1 w:1)
	// Proof: NominationPools BondedPools (max_values: None, max_size: Some(462), added: 2937, mode: MaxEncodedLen)
	// Storage: Fungibles TokenAccounts (r:1 w:1)
	// Proof: Fungibles TokenAccounts (max_values: None, max_size: Some(790), added: 3265, mode: MaxEncodedLen)
	// Storage: Staking Bonded (r:1 w:0)
	// Proof: Staking Bonded (max_values: None, max_size: Some(72), added: 2547, mode: MaxEncodedLen)
	// Storage: Staking Ledger (r:1 w:1)
	// Proof: Staking Ledger (max_values: None, max_size: Some(1091), added: 3566, mode: MaxEncodedLen)
	// Storage: Fungibles Tokens (r:1 w:1)
	// Proof: Fungibles Tokens (max_values: None, max_size: Some(875), added: 3350, mode: MaxEncodedLen)
	// Storage: Staking CurrentEra (r:1 w:0)
	// Proof: Staking CurrentEra (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Staking Nominators (r:1 w:0)
	// Proof: Staking Nominators (max_values: None, max_size: Some(558), added: 3033, mode: MaxEncodedLen)
	// Storage: Staking MinNominatorBond (r:1 w:0)
	// Proof: Staking MinNominatorBond (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: Balances Freezes (r:1 w:0)
	// Proof: Balances Freezes (max_values: None, max_size: Some(49), added: 2524, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: VoterList ListNodes (r:3 w:3)
	// Proof: VoterList ListNodes (max_values: None, max_size: Some(154), added: 2629, mode: MaxEncodedLen)
	// Storage: VoterList ListBags (r:2 w:2)
	// Proof: VoterList ListBags (max_values: None, max_size: Some(82), added: 2557, mode: MaxEncodedLen)
	// Storage: NominationPools SubPoolsStorage (r:1 w:1)
	// Proof: NominationPools SubPoolsStorage (max_values: None, max_size: Some(1197), added: 3672, mode: MaxEncodedLen)
	// Storage: Fungibles Collections (r:1 w:1)
	// Proof: Fungibles Collections (max_values: None, max_size: Some(478), added: 2953, mode: MaxEncodedLen)
	// Storage: Fungibles CollectionAccounts (r:1 w:1)
	// Proof: Fungibles CollectionAccounts (max_values: None, max_size: Some(456), added: 2931, mode: MaxEncodedLen)
	// Storage: Balances Reserves (r:1 w:0)
	// Proof: Balances Reserves (max_values: None, max_size: Some(1249), added: 3724, mode: MaxEncodedLen)
	// Storage: NominationPools CounterForSubPoolsStorage (r:1 w:1)
	// Proof: NominationPools CounterForSubPoolsStorage (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	fn unbond() -> Weight {
		Weight::from_parts(166_000_000 as u64, 0)
			.saturating_add(T::DbWeight::get().reads(22 as u64))
			.saturating_add(T::DbWeight::get().writes(16 as u64))
	}
	// Storage: NominationPools BondedPools (r:1 w:1)
	// Proof: NominationPools BondedPools (max_values: None, max_size: Some(462), added: 2937, mode: MaxEncodedLen)
	// Storage: Fungibles TokenAccounts (r:2 w:1)
	// Proof: Fungibles TokenAccounts (max_values: None, max_size: Some(790), added: 3265, mode: MaxEncodedLen)
	// Storage: Fungibles Tokens (r:1 w:1)
	// Proof: Fungibles Tokens (max_values: None, max_size: Some(875), added: 3350, mode: MaxEncodedLen)
	// Storage: NominationPools UnbondingMembers (r:2 w:1)
	// Proof: NominationPools UnbondingMembers (max_values: None, max_size: Some(213), added: 2688, mode: MaxEncodedLen)
	// Storage: Staking Bonded (r:1 w:0)
	// Proof: Staking Bonded (max_values: None, max_size: Some(72), added: 2547, mode: MaxEncodedLen)
	// Storage: Staking Ledger (r:1 w:1)
	// Proof: Staking Ledger (max_values: None, max_size: Some(1091), added: 3566, mode: MaxEncodedLen)
	// Storage: Staking CurrentEra (r:1 w:0)
	// Proof: Staking CurrentEra (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Staking Nominators (r:1 w:0)
	// Proof: Staking Nominators (max_values: None, max_size: Some(558), added: 3033, mode: MaxEncodedLen)
	// Storage: Staking Validators (r:1 w:0)
	// Proof: Staking Validators (max_values: None, max_size: Some(45), added: 2520, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: Balances Freezes (r:1 w:0)
	// Proof: Balances Freezes (max_values: None, max_size: Some(49), added: 2524, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: VoterList ListNodes (r:1 w:0)
	// Proof: VoterList ListNodes (max_values: None, max_size: Some(154), added: 2629, mode: MaxEncodedLen)
	// Storage: NominationPools SubPoolsStorage (r:1 w:1)
	// Proof: NominationPools SubPoolsStorage (max_values: None, max_size: Some(1197), added: 3672, mode: MaxEncodedLen)
	// Storage: Fungibles Collections (r:1 w:1)
	// Proof: Fungibles Collections (max_values: None, max_size: Some(478), added: 2953, mode: MaxEncodedLen)
	// Storage: Fungibles CollectionAccounts (r:1 w:1)
	// Proof: Fungibles CollectionAccounts (max_values: None, max_size: Some(456), added: 2931, mode: MaxEncodedLen)
	// Storage: Balances Reserves (r:1 w:0)
	// Proof: Balances Reserves (max_values: None, max_size: Some(1249), added: 3724, mode: MaxEncodedLen)
	fn unbond_deposit() -> Weight {
		Weight::from_parts(166_000_000 as u64, 0)
			.saturating_add(T::DbWeight::get().reads(19 as u64))
			.saturating_add(T::DbWeight::get().writes(10 as u64))
	}
	// Storage: NominationPools BondedPools (r:1 w:0)
	// Proof: NominationPools BondedPools (max_values: None, max_size: Some(462), added: 2937, mode: MaxEncodedLen)
	// Storage: Staking Bonded (r:1 w:0)
	// Proof: Staking Bonded (max_values: None, max_size: Some(72), added: 2547, mode: MaxEncodedLen)
	// Storage: Staking Ledger (r:1 w:1)
	// Proof: Staking Ledger (max_values: None, max_size: Some(1091), added: 3566, mode: MaxEncodedLen)
	// Storage: Staking CurrentEra (r:1 w:0)
	// Proof: Staking CurrentEra (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: Balances Freezes (r:1 w:0)
	// Proof: Balances Freezes (max_values: None, max_size: Some(49), added: 2524, mode: MaxEncodedLen)
	/// The range of component `s` is `[0, 100]`.
	fn pool_withdraw_unbonded(s: u32, ) -> Weight {
		Weight::from_parts(45_660_557 as u64, 0)
			// Standard Error: 18_473
			.saturating_add(Weight::from_parts(6_843 as u64, 0).saturating_mul(s as u64))
			.saturating_add(T::DbWeight::get().reads(6 as u64))
			.saturating_add(T::DbWeight::get().writes(2 as u64))
	}
	// Storage: NominationPools UnbondingMembers (r:1 w:1)
	// Proof: NominationPools UnbondingMembers (max_values: None, max_size: Some(213), added: 2688, mode: MaxEncodedLen)
	// Storage: Staking CurrentEra (r:1 w:0)
	// Proof: Staking CurrentEra (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: NominationPools BondedPools (r:1 w:0)
	// Proof: NominationPools BondedPools (max_values: None, max_size: Some(462), added: 2937, mode: MaxEncodedLen)
	// Storage: NominationPools SubPoolsStorage (r:1 w:1)
	// Proof: NominationPools SubPoolsStorage (max_values: None, max_size: Some(1197), added: 3672, mode: MaxEncodedLen)
	// Storage: Staking Bonded (r:1 w:0)
	// Proof: Staking Bonded (max_values: None, max_size: Some(72), added: 2547, mode: MaxEncodedLen)
	// Storage: Staking Ledger (r:1 w:1)
	// Proof: Staking Ledger (max_values: None, max_size: Some(1091), added: 3566, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: Balances Freezes (r:1 w:0)
	// Proof: Balances Freezes (max_values: None, max_size: Some(49), added: 2524, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: Fungibles TokenAccounts (r:1 w:0)
	// Proof: Fungibles TokenAccounts (max_values: None, max_size: Some(790), added: 3265, mode: MaxEncodedLen)
	/// The range of component `s` is `[0, 100]`.
	fn withdraw_unbonded_update(s: u32, ) -> Weight {
		Weight::from_parts(100_026_065 as u64, 0)
			// Standard Error: 44_453
			.saturating_add(Weight::from_parts(102_297 as u64, 0).saturating_mul(s as u64))
			.saturating_add(T::DbWeight::get().reads(10 as u64))
			.saturating_add(T::DbWeight::get().writes(5 as u64))
	}
	// Storage: NominationPools UnbondingMembers (r:1 w:2)
	// Proof: NominationPools UnbondingMembers (max_values: None, max_size: Some(213), added: 2688, mode: MaxEncodedLen)
	// Storage: Staking CurrentEra (r:1 w:0)
	// Proof: Staking CurrentEra (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: NominationPools BondedPools (r:1 w:1)
	// Proof: NominationPools BondedPools (max_values: None, max_size: Some(462), added: 2937, mode: MaxEncodedLen)
	// Storage: NominationPools SubPoolsStorage (r:1 w:1)
	// Proof: NominationPools SubPoolsStorage (max_values: None, max_size: Some(1197), added: 3672, mode: MaxEncodedLen)
	// Storage: Fungibles TokenAccounts (r:3 w:0)
	// Proof: Fungibles TokenAccounts (max_values: None, max_size: Some(790), added: 3265, mode: MaxEncodedLen)
	// Storage: Staking Bonded (r:1 w:1)
	// Proof: Staking Bonded (max_values: None, max_size: Some(72), added: 2547, mode: MaxEncodedLen)
	// Storage: Staking Ledger (r:1 w:1)
	// Proof: Staking Ledger (max_values: None, max_size: Some(1091), added: 3566, mode: MaxEncodedLen)
	// Storage: Staking SlashingSpans (r:1 w:0)
	// Proof Skipped: Staking SlashingSpans (max_values: None, max_size: None, mode: Measured)
	// Storage: Staking Validators (r:1 w:0)
	// Proof: Staking Validators (max_values: None, max_size: Some(45), added: 2520, mode: MaxEncodedLen)
	// Storage: Staking Nominators (r:1 w:0)
	// Proof: Staking Nominators (max_values: None, max_size: Some(558), added: 3033, mode: MaxEncodedLen)
	// Storage: System Account (r:4 w:4)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: Balances Freezes (r:1 w:0)
	// Proof: Balances Freezes (max_values: None, max_size: Some(49), added: 2524, mode: MaxEncodedLen)
	// Storage: Fungibles Tokens (r:2 w:0)
	// Proof: Fungibles Tokens (max_values: None, max_size: Some(875), added: 3350, mode: MaxEncodedLen)
	// Storage: NominationPools ReversePoolIdLookup (r:1 w:1)
	// Proof: NominationPools ReversePoolIdLookup (max_values: None, max_size: Some(44), added: 2519, mode: MaxEncodedLen)
	// Storage: NominationPools CounterForReversePoolIdLookup (r:1 w:1)
	// Proof: NominationPools CounterForReversePoolIdLookup (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: NominationPools CounterForSubPoolsStorage (r:1 w:1)
	// Proof: NominationPools CounterForSubPoolsStorage (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: NominationPools CounterForBondedPools (r:1 w:1)
	// Proof: NominationPools CounterForBondedPools (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Staking Payee (r:0 w:1)
	// Proof: Staking Payee (max_values: None, max_size: Some(73), added: 2548, mode: MaxEncodedLen)
	// Storage: NominationPools UsedPoolAssetIds (r:0 w:1)
	// Proof: NominationPools UsedPoolAssetIds (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	fn withdraw_deposit() -> Weight {
		Weight::from_parts(263_000_000 as u64, 0)
			.saturating_add(T::DbWeight::get().reads(24 as u64))
			.saturating_add(T::DbWeight::get().writes(17 as u64))
	}
	// Storage: System Account (r:2 w:2)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	fn withdraw_free_balance() -> Weight {
		Weight::from_parts(44_000_000 as u64, 0)
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().writes(2 as u64))
	}
	// Storage: NominationPools NextPoolId (r:1 w:1)
	// Proof: NominationPools NextPoolId (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Staking MinNominatorBond (r:1 w:0)
	// Proof: Staking MinNominatorBond (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	// Storage: NominationPools MinCreateBond (r:1 w:0)
	// Proof: NominationPools MinCreateBond (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	// Storage: NominationPools MinJoinBond (r:1 w:0)
	// Proof: NominationPools MinJoinBond (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	// Storage: Fungibles TokenAccounts (r:2 w:1)
	// Proof: Fungibles TokenAccounts (max_values: None, max_size: Some(790), added: 3265, mode: MaxEncodedLen)
	// Storage: NominationPools UsedPoolAssetIds (r:1 w:1)
	// Proof: NominationPools UsedPoolAssetIds (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: Fungibles Attributes (r:1 w:0)
	// Proof: Fungibles Attributes (max_values: None, max_size: Some(1381), added: 3856, mode: MaxEncodedLen)
	// Storage: Staking CurrentEra (r:1 w:0)
	// Proof: Staking CurrentEra (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: System Account (r:3 w:3)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: Staking Bonded (r:1 w:1)
	// Proof: Staking Bonded (max_values: None, max_size: Some(72), added: 2547, mode: MaxEncodedLen)
	// Storage: Fungibles Tokens (r:1 w:1)
	// Proof: Fungibles Tokens (max_values: None, max_size: Some(875), added: 3350, mode: MaxEncodedLen)
	// Storage: Staking Ledger (r:1 w:1)
	// Proof: Staking Ledger (max_values: None, max_size: Some(1091), added: 3566, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: Balances Freezes (r:1 w:0)
	// Proof: Balances Freezes (max_values: None, max_size: Some(49), added: 2524, mode: MaxEncodedLen)
	// Storage: NominationPools ReversePoolIdLookup (r:1 w:1)
	// Proof: NominationPools ReversePoolIdLookup (max_values: None, max_size: Some(44), added: 2519, mode: MaxEncodedLen)
	// Storage: NominationPools CounterForReversePoolIdLookup (r:1 w:1)
	// Proof: NominationPools CounterForReversePoolIdLookup (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: NominationPools BondedPools (r:1 w:1)
	// Proof: NominationPools BondedPools (max_values: None, max_size: Some(462), added: 2937, mode: MaxEncodedLen)
	// Storage: NominationPools CounterForBondedPools (r:1 w:1)
	// Proof: NominationPools CounterForBondedPools (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Fungibles Collections (r:1 w:1)
	// Proof: Fungibles Collections (max_values: None, max_size: Some(478), added: 2953, mode: MaxEncodedLen)
	// Storage: Fungibles UnmintableAssetIds (r:1 w:0)
	// Proof: Fungibles UnmintableAssetIds (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
	// Storage: Fungibles CollectionAccounts (r:1 w:1)
	// Proof: Fungibles CollectionAccounts (max_values: None, max_size: Some(456), added: 2931, mode: MaxEncodedLen)
	// Storage: Staking Payee (r:0 w:1)
	// Proof: Staking Payee (max_values: None, max_size: Some(73), added: 2548, mode: MaxEncodedLen)
	fn create() -> Weight {
		Weight::from_parts(263_000_000 as u64, 0)
			.saturating_add(T::DbWeight::get().reads(24 as u64))
			.saturating_add(T::DbWeight::get().writes(17 as u64))
	}
	// Storage: NominationPools BondedPools (r:1 w:0)
	// Proof: NominationPools BondedPools (max_values: None, max_size: Some(462), added: 2937, mode: MaxEncodedLen)
	// Storage: Fungibles TokenAccounts (r:1 w:0)
	// Proof: Fungibles TokenAccounts (max_values: None, max_size: Some(790), added: 3265, mode: MaxEncodedLen)
	// Storage: Staking Bonded (r:1 w:0)
	// Proof: Staking Bonded (max_values: None, max_size: Some(72), added: 2547, mode: MaxEncodedLen)
	// Storage: Staking Ledger (r:1 w:0)
	// Proof: Staking Ledger (max_values: None, max_size: Some(1091), added: 3566, mode: MaxEncodedLen)
	// Storage: Staking MinNominatorBond (r:1 w:0)
	// Proof: Staking MinNominatorBond (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	// Storage: Staking Nominators (r:1 w:1)
	// Proof: Staking Nominators (max_values: None, max_size: Some(558), added: 3033, mode: MaxEncodedLen)
	// Storage: Staking MaxNominatorsCount (r:1 w:0)
	// Proof: Staking MaxNominatorsCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Staking Validators (r:17 w:0)
	// Proof: Staking Validators (max_values: None, max_size: Some(45), added: 2520, mode: MaxEncodedLen)
	// Storage: Staking CurrentEra (r:1 w:0)
	// Proof: Staking CurrentEra (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: VoterList ListNodes (r:1 w:1)
	// Proof: VoterList ListNodes (max_values: None, max_size: Some(154), added: 2629, mode: MaxEncodedLen)
	// Storage: VoterList ListBags (r:1 w:1)
	// Proof: VoterList ListBags (max_values: None, max_size: Some(82), added: 2557, mode: MaxEncodedLen)
	// Storage: VoterList CounterForListNodes (r:1 w:1)
	// Proof: VoterList CounterForListNodes (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Staking CounterForNominators (r:1 w:1)
	// Proof: Staking CounterForNominators (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// The range of component `n` is `[1, 16]`.
	fn nominate(n: u32, ) -> Weight {
		Weight::from_parts(79_876_511 as u64, 0)
			// Standard Error: 659_505
			.saturating_add(Weight::from_parts(1_271_157 as u64, 0).saturating_mul(n as u64))
			.saturating_add(T::DbWeight::get().reads(13 as u64))
			.saturating_add(T::DbWeight::get().reads((1 as u64).saturating_mul(n as u64)))
			.saturating_add(T::DbWeight::get().writes(5 as u64))
	}
	// Storage: Staking CurrentEra (r:1 w:0)
	// Proof: Staking CurrentEra (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Staking ErasValidatorReward (r:1 w:0)
	// Proof: Staking ErasValidatorReward (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: Staking Bonded (r:257 w:0)
	// Proof: Staking Bonded (max_values: None, max_size: Some(72), added: 2547, mode: MaxEncodedLen)
	// Storage: Staking Ledger (r:257 w:257)
	// Proof: Staking Ledger (max_values: None, max_size: Some(1091), added: 3566, mode: MaxEncodedLen)
	// Storage: Staking ErasStakersClipped (r:1 w:0)
	// Proof Skipped: Staking ErasStakersClipped (max_values: None, max_size: None, mode: Measured)
	// Storage: NominationPools ReversePoolIdLookup (r:256 w:0)
	// Proof: NominationPools ReversePoolIdLookup (max_values: None, max_size: Some(44), added: 2519, mode: MaxEncodedLen)
	// Storage: NominationPools BondedPools (r:256 w:256)
	// Proof: NominationPools BondedPools (max_values: None, max_size: Some(462), added: 2937, mode: MaxEncodedLen)
	// Storage: System Account (r:1026 w:1026)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: Fungibles Tokens (r:256 w:0)
	// Proof: Fungibles Tokens (max_values: None, max_size: Some(875), added: 3350, mode: MaxEncodedLen)
	// Storage: Fungibles TokenAccounts (r:256 w:0)
	// Proof: Fungibles TokenAccounts (max_values: None, max_size: Some(790), added: 3265, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:257 w:257)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: Balances Freezes (r:257 w:0)
	// Proof: Balances Freezes (max_values: None, max_size: Some(49), added: 2524, mode: MaxEncodedLen)
	// Storage: VoterList ListNodes (r:256 w:256)
	// Proof: VoterList ListNodes (max_values: None, max_size: Some(154), added: 2629, mode: MaxEncodedLen)
	// Storage: VoterList ListBags (r:2 w:2)
	// Proof: VoterList ListBags (max_values: None, max_size: Some(82), added: 2557, mode: MaxEncodedLen)
	// Storage: Staking ErasRewardPoints (r:1 w:0)
	// Proof Skipped: Staking ErasRewardPoints (max_values: None, max_size: None, mode: Measured)
	// Storage: Staking ErasValidatorPrefs (r:1 w:0)
	// Proof: Staking ErasValidatorPrefs (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Staking Payee (r:257 w:0)
	// Proof: Staking Payee (max_values: None, max_size: Some(73), added: 2548, mode: MaxEncodedLen)
	// Storage: NominationPools EraPayoutInfo (r:1 w:1)
	// Proof: NominationPools EraPayoutInfo (max_values: Some(1), max_size: Some(13), added: 508, mode: MaxEncodedLen)
	/// The range of component `n` is `[0, 256]`.
	fn payout_rewards(n: u32, ) -> Weight {
		Weight::from_parts(171_868_297 as u64, 0)
			// Standard Error: 1_765_179
			.saturating_add(Weight::from_parts(237_055_891 as u64, 0).saturating_mul(n as u64))
			.saturating_add(T::DbWeight::get().reads(14 as u64))
			.saturating_add(T::DbWeight::get().reads((14 as u64).saturating_mul(n as u64)))
			.saturating_add(T::DbWeight::get().writes(6 as u64))
			.saturating_add(T::DbWeight::get().writes((8 as u64).saturating_mul(n as u64)))
	}
	// Storage: NominationPools CounterForBondedPools (r:1 w:0)
	// Proof: NominationPools CounterForBondedPools (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Staking CurrentEra (r:1 w:0)
	// Proof: Staking CurrentEra (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: NominationPools EraPayoutInfo (r:1 w:1)
	// Proof: NominationPools EraPayoutInfo (max_values: Some(1), max_size: Some(13), added: 508, mode: MaxEncodedLen)
	// Storage: Staking CounterForValidators (r:1 w:0)
	// Proof: Staking CounterForValidators (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Staking ValidatorCount (r:1 w:0)
	// Proof: Staking ValidatorCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: NominationPools BondedPools (r:101 w:100)
	// Proof: NominationPools BondedPools (max_values: None, max_size: Some(462), added: 2937, mode: MaxEncodedLen)
	// Storage: System Account (r:400 w:300)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: Fungibles Tokens (r:100 w:0)
	// Proof: Fungibles Tokens (max_values: None, max_size: Some(875), added: 3350, mode: MaxEncodedLen)
	// Storage: Fungibles TokenAccounts (r:100 w:0)
	// Proof: Fungibles TokenAccounts (max_values: None, max_size: Some(790), added: 3265, mode: MaxEncodedLen)
	// Storage: Staking Bonded (r:100 w:0)
	// Proof: Staking Bonded (max_values: None, max_size: Some(72), added: 2547, mode: MaxEncodedLen)
	// Storage: Staking Ledger (r:100 w:100)
	// Proof: Staking Ledger (max_values: None, max_size: Some(1091), added: 3566, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:100 w:100)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: Balances Freezes (r:100 w:0)
	// Proof: Balances Freezes (max_values: None, max_size: Some(49), added: 2524, mode: MaxEncodedLen)
	// Storage: VoterList ListNodes (r:100 w:0)
	// Proof: VoterList ListNodes (max_values: None, max_size: Some(154), added: 2629, mode: MaxEncodedLen)
	/// The range of component `n` is `[0, 100]`.
	fn process_payouts(n: u32, ) -> Weight {
		Weight::from_parts(18_000_000 as u64, 0)
			// Standard Error: 419_662
			.saturating_add(Weight::from_parts(121_918_896 as u64, 0).saturating_mul(n as u64))
			.saturating_add(T::DbWeight::get().reads(6 as u64))
			.saturating_add(T::DbWeight::get().reads((12 as u64).saturating_mul(n as u64)))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
			.saturating_add(T::DbWeight::get().writes((6 as u64).saturating_mul(n as u64)))
	}
	// Storage: NominationPools EraPayoutInfo (r:1 w:1)
	// Proof: NominationPools EraPayoutInfo (max_values: Some(1), max_size: Some(13), added: 508, mode: MaxEncodedLen)
	// Storage: NominationPools MinJoinBond (r:0 w:1)
	// Proof: NominationPools MinJoinBond (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	// Storage: NominationPools MinCreateBond (r:0 w:1)
	// Proof: NominationPools MinCreateBond (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	// Storage: NominationPools GlobalMaxCommission (r:0 w:1)
	// Proof: NominationPools GlobalMaxCommission (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	fn set_configs() -> Weight {
		Weight::from_parts(7_000_000 as u64, 0)
			.saturating_add(T::DbWeight::get().reads(1 as u64))
			.saturating_add(T::DbWeight::get().writes(4 as u64))
	}
	// Storage: NominationPools BondedPools (r:1 w:0)
	// Proof: NominationPools BondedPools (max_values: None, max_size: Some(462), added: 2937, mode: MaxEncodedLen)
	// Storage: Fungibles TokenAccounts (r:1 w:0)
	// Proof: Fungibles TokenAccounts (max_values: None, max_size: Some(790), added: 3265, mode: MaxEncodedLen)
	// Storage: Staking Bonded (r:1 w:0)
	// Proof: Staking Bonded (max_values: None, max_size: Some(72), added: 2547, mode: MaxEncodedLen)
	// Storage: Staking Ledger (r:1 w:0)
	// Proof: Staking Ledger (max_values: None, max_size: Some(1091), added: 3566, mode: MaxEncodedLen)
	// Storage: Staking Validators (r:1 w:0)
	// Proof: Staking Validators (max_values: None, max_size: Some(45), added: 2520, mode: MaxEncodedLen)
	// Storage: Staking Nominators (r:1 w:1)
	// Proof: Staking Nominators (max_values: None, max_size: Some(558), added: 3033, mode: MaxEncodedLen)
	// Storage: Staking CounterForNominators (r:1 w:1)
	// Proof: Staking CounterForNominators (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: VoterList ListNodes (r:1 w:1)
	// Proof: VoterList ListNodes (max_values: None, max_size: Some(154), added: 2629, mode: MaxEncodedLen)
	// Storage: VoterList ListBags (r:1 w:1)
	// Proof: VoterList ListBags (max_values: None, max_size: Some(82), added: 2557, mode: MaxEncodedLen)
	// Storage: VoterList CounterForListNodes (r:1 w:1)
	// Proof: VoterList CounterForListNodes (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	fn chill() -> Weight {
		Weight::from_parts(72_000_000 as u64, 0)
			.saturating_add(T::DbWeight::get().reads(10 as u64))
			.saturating_add(T::DbWeight::get().writes(5 as u64))
	}
	// Storage: NominationPools BondedPools (r:1 w:1)
	// Proof: NominationPools BondedPools (max_values: None, max_size: Some(462), added: 2937, mode: MaxEncodedLen)
	// Storage: Fungibles Tokens (r:1 w:0)
	// Proof: Fungibles Tokens (max_values: None, max_size: Some(875), added: 3350, mode: MaxEncodedLen)
	// Storage: Fungibles TokenAccounts (r:1 w:0)
	// Proof: Fungibles TokenAccounts (max_values: None, max_size: Some(790), added: 3265, mode: MaxEncodedLen)
	fn destroy() -> Weight {
		Weight::from_parts(24_000_000 as u64, 0)
			.saturating_add(T::DbWeight::get().reads(3 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
	// Storage: NominationPools BondedPools (r:1 w:1)
	// Proof: NominationPools BondedPools (max_values: None, max_size: Some(462), added: 2937, mode: MaxEncodedLen)
	// Storage: Fungibles TokenAccounts (r:1 w:0)
	// Proof: Fungibles TokenAccounts (max_values: None, max_size: Some(790), added: 3265, mode: MaxEncodedLen)
	// Storage: NominationPools GlobalMaxCommission (r:1 w:0)
	// Proof: NominationPools GlobalMaxCommission (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Fungibles Attributes (r:1 w:0)
	// Proof: Fungibles Attributes (max_values: None, max_size: Some(1381), added: 3856, mode: MaxEncodedLen)
	// Storage: Staking CurrentEra (r:1 w:0)
	// Proof: Staking CurrentEra (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Fungibles Tokens (r:1 w:0)
	// Proof: Fungibles Tokens (max_values: None, max_size: Some(875), added: 3350, mode: MaxEncodedLen)
	// Storage: Staking Nominators (r:1 w:0)
	// Proof: Staking Nominators (max_values: None, max_size: Some(558), added: 3033, mode: MaxEncodedLen)
	fn mutate() -> Weight {
		Weight::from_parts(47_000_000 as u64, 0)
			.saturating_add(T::DbWeight::get().reads(7 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
}

// For backwards compatibility and tests
impl WeightInfo for () {
	// Storage: NominationPools BondedPools (r:1 w:1)
	// Proof: NominationPools BondedPools (max_values: None, max_size: Some(462), added: 2937, mode: MaxEncodedLen)
	// Storage: Staking Bonded (r:1 w:0)
	// Proof: Staking Bonded (max_values: None, max_size: Some(72), added: 2547, mode: MaxEncodedLen)
	// Storage: Staking Ledger (r:1 w:1)
	// Proof: Staking Ledger (max_values: None, max_size: Some(1091), added: 3566, mode: MaxEncodedLen)
	// Storage: Fungibles Tokens (r:1 w:1)
	// Proof: Fungibles Tokens (max_values: None, max_size: Some(875), added: 3350, mode: MaxEncodedLen)
	// Storage: NominationPools MinJoinBond (r:1 w:0)
	// Proof: NominationPools MinJoinBond (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: Balances Freezes (r:1 w:0)
	// Proof: Balances Freezes (max_values: None, max_size: Some(49), added: 2524, mode: MaxEncodedLen)
	// Storage: VoterList ListNodes (r:3 w:3)
	// Proof: VoterList ListNodes (max_values: None, max_size: Some(154), added: 2629, mode: MaxEncodedLen)
	// Storage: VoterList ListBags (r:2 w:2)
	// Proof: VoterList ListBags (max_values: None, max_size: Some(82), added: 2557, mode: MaxEncodedLen)
	// Storage: Fungibles Collections (r:1 w:1)
	// Proof: Fungibles Collections (max_values: None, max_size: Some(478), added: 2953, mode: MaxEncodedLen)
	// Storage: Fungibles UnmintableAssetIds (r:1 w:0)
	// Proof: Fungibles UnmintableAssetIds (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
	// Storage: Fungibles CollectionAccounts (r:1 w:1)
	// Proof: Fungibles CollectionAccounts (max_values: None, max_size: Some(456), added: 2931, mode: MaxEncodedLen)
	// Storage: Fungibles TokenAccounts (r:1 w:1)
	// Proof: Fungibles TokenAccounts (max_values: None, max_size: Some(790), added: 3265, mode: MaxEncodedLen)
	fn bond() -> Weight {
		Weight::from_parts(177_000_000 as u64, 0)
			.saturating_add(RocksDbWeight::get().reads(17 as u64))
			.saturating_add(RocksDbWeight::get().writes(13 as u64))
	}
	// Storage: NominationPools UnbondingMembers (r:1 w:1)
	// Proof: NominationPools UnbondingMembers (max_values: None, max_size: Some(213), added: 2688, mode: MaxEncodedLen)
	// Storage: NominationPools BondedPools (r:1 w:1)
	// Proof: NominationPools BondedPools (max_values: None, max_size: Some(462), added: 2937, mode: MaxEncodedLen)
	// Storage: Fungibles TokenAccounts (r:1 w:1)
	// Proof: Fungibles TokenAccounts (max_values: None, max_size: Some(790), added: 3265, mode: MaxEncodedLen)
	// Storage: Staking Bonded (r:1 w:0)
	// Proof: Staking Bonded (max_values: None, max_size: Some(72), added: 2547, mode: MaxEncodedLen)
	// Storage: Staking Ledger (r:1 w:1)
	// Proof: Staking Ledger (max_values: None, max_size: Some(1091), added: 3566, mode: MaxEncodedLen)
	// Storage: Fungibles Tokens (r:1 w:1)
	// Proof: Fungibles Tokens (max_values: None, max_size: Some(875), added: 3350, mode: MaxEncodedLen)
	// Storage: Staking CurrentEra (r:1 w:0)
	// Proof: Staking CurrentEra (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Staking Nominators (r:1 w:0)
	// Proof: Staking Nominators (max_values: None, max_size: Some(558), added: 3033, mode: MaxEncodedLen)
	// Storage: Staking MinNominatorBond (r:1 w:0)
	// Proof: Staking MinNominatorBond (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: Balances Freezes (r:1 w:0)
	// Proof: Balances Freezes (max_values: None, max_size: Some(49), added: 2524, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: VoterList ListNodes (r:3 w:3)
	// Proof: VoterList ListNodes (max_values: None, max_size: Some(154), added: 2629, mode: MaxEncodedLen)
	// Storage: VoterList ListBags (r:2 w:2)
	// Proof: VoterList ListBags (max_values: None, max_size: Some(82), added: 2557, mode: MaxEncodedLen)
	// Storage: NominationPools SubPoolsStorage (r:1 w:1)
	// Proof: NominationPools SubPoolsStorage (max_values: None, max_size: Some(1197), added: 3672, mode: MaxEncodedLen)
	// Storage: Fungibles Collections (r:1 w:1)
	// Proof: Fungibles Collections (max_values: None, max_size: Some(478), added: 2953, mode: MaxEncodedLen)
	// Storage: Fungibles CollectionAccounts (r:1 w:1)
	// Proof: Fungibles CollectionAccounts (max_values: None, max_size: Some(456), added: 2931, mode: MaxEncodedLen)
	// Storage: Balances Reserves (r:1 w:0)
	// Proof: Balances Reserves (max_values: None, max_size: Some(1249), added: 3724, mode: MaxEncodedLen)
	// Storage: NominationPools CounterForSubPoolsStorage (r:1 w:1)
	// Proof: NominationPools CounterForSubPoolsStorage (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	fn unbond() -> Weight {
		Weight::from_parts(166_000_000 as u64, 0)
			.saturating_add(RocksDbWeight::get().reads(22 as u64))
			.saturating_add(RocksDbWeight::get().writes(16 as u64))
	}
	// Storage: NominationPools BondedPools (r:1 w:1)
	// Proof: NominationPools BondedPools (max_values: None, max_size: Some(462), added: 2937, mode: MaxEncodedLen)
	// Storage: Fungibles TokenAccounts (r:2 w:1)
	// Proof: Fungibles TokenAccounts (max_values: None, max_size: Some(790), added: 3265, mode: MaxEncodedLen)
	// Storage: Fungibles Tokens (r:1 w:1)
	// Proof: Fungibles Tokens (max_values: None, max_size: Some(875), added: 3350, mode: MaxEncodedLen)
	// Storage: NominationPools UnbondingMembers (r:2 w:1)
	// Proof: NominationPools UnbondingMembers (max_values: None, max_size: Some(213), added: 2688, mode: MaxEncodedLen)
	// Storage: Staking Bonded (r:1 w:0)
	// Proof: Staking Bonded (max_values: None, max_size: Some(72), added: 2547, mode: MaxEncodedLen)
	// Storage: Staking Ledger (r:1 w:1)
	// Proof: Staking Ledger (max_values: None, max_size: Some(1091), added: 3566, mode: MaxEncodedLen)
	// Storage: Staking CurrentEra (r:1 w:0)
	// Proof: Staking CurrentEra (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Staking Nominators (r:1 w:0)
	// Proof: Staking Nominators (max_values: None, max_size: Some(558), added: 3033, mode: MaxEncodedLen)
	// Storage: Staking Validators (r:1 w:0)
	// Proof: Staking Validators (max_values: None, max_size: Some(45), added: 2520, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: Balances Freezes (r:1 w:0)
	// Proof: Balances Freezes (max_values: None, max_size: Some(49), added: 2524, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: VoterList ListNodes (r:1 w:0)
	// Proof: VoterList ListNodes (max_values: None, max_size: Some(154), added: 2629, mode: MaxEncodedLen)
	// Storage: NominationPools SubPoolsStorage (r:1 w:1)
	// Proof: NominationPools SubPoolsStorage (max_values: None, max_size: Some(1197), added: 3672, mode: MaxEncodedLen)
	// Storage: Fungibles Collections (r:1 w:1)
	// Proof: Fungibles Collections (max_values: None, max_size: Some(478), added: 2953, mode: MaxEncodedLen)
	// Storage: Fungibles CollectionAccounts (r:1 w:1)
	// Proof: Fungibles CollectionAccounts (max_values: None, max_size: Some(456), added: 2931, mode: MaxEncodedLen)
	// Storage: Balances Reserves (r:1 w:0)
	// Proof: Balances Reserves (max_values: None, max_size: Some(1249), added: 3724, mode: MaxEncodedLen)
	fn unbond_deposit() -> Weight {
		Weight::from_parts(166_000_000 as u64, 0)
			.saturating_add(RocksDbWeight::get().reads(19 as u64))
			.saturating_add(RocksDbWeight::get().writes(10 as u64))
	}
	// Storage: NominationPools BondedPools (r:1 w:0)
	// Proof: NominationPools BondedPools (max_values: None, max_size: Some(462), added: 2937, mode: MaxEncodedLen)
	// Storage: Staking Bonded (r:1 w:0)
	// Proof: Staking Bonded (max_values: None, max_size: Some(72), added: 2547, mode: MaxEncodedLen)
	// Storage: Staking Ledger (r:1 w:1)
	// Proof: Staking Ledger (max_values: None, max_size: Some(1091), added: 3566, mode: MaxEncodedLen)
	// Storage: Staking CurrentEra (r:1 w:0)
	// Proof: Staking CurrentEra (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: Balances Freezes (r:1 w:0)
	// Proof: Balances Freezes (max_values: None, max_size: Some(49), added: 2524, mode: MaxEncodedLen)
	/// The range of component `s` is `[0, 100]`.
	fn pool_withdraw_unbonded(s: u32, ) -> Weight {
		Weight::from_parts(45_660_557 as u64, 0)
			// Standard Error: 18_473
			.saturating_add(Weight::from_parts(6_843 as u64, 0).saturating_mul(s as u64))
			.saturating_add(RocksDbWeight::get().reads(6 as u64))
			.saturating_add(RocksDbWeight::get().writes(2 as u64))
	}
	// Storage: NominationPools UnbondingMembers (r:1 w:1)
	// Proof: NominationPools UnbondingMembers (max_values: None, max_size: Some(213), added: 2688, mode: MaxEncodedLen)
	// Storage: Staking CurrentEra (r:1 w:0)
	// Proof: Staking CurrentEra (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: NominationPools BondedPools (r:1 w:0)
	// Proof: NominationPools BondedPools (max_values: None, max_size: Some(462), added: 2937, mode: MaxEncodedLen)
	// Storage: NominationPools SubPoolsStorage (r:1 w:1)
	// Proof: NominationPools SubPoolsStorage (max_values: None, max_size: Some(1197), added: 3672, mode: MaxEncodedLen)
	// Storage: Staking Bonded (r:1 w:0)
	// Proof: Staking Bonded (max_values: None, max_size: Some(72), added: 2547, mode: MaxEncodedLen)
	// Storage: Staking Ledger (r:1 w:1)
	// Proof: Staking Ledger (max_values: None, max_size: Some(1091), added: 3566, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: Balances Freezes (r:1 w:0)
	// Proof: Balances Freezes (max_values: None, max_size: Some(49), added: 2524, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: Fungibles TokenAccounts (r:1 w:0)
	// Proof: Fungibles TokenAccounts (max_values: None, max_size: Some(790), added: 3265, mode: MaxEncodedLen)
	/// The range of component `s` is `[0, 100]`.
	fn withdraw_unbonded_update(s: u32, ) -> Weight {
		Weight::from_parts(100_026_065 as u64, 0)
			// Standard Error: 44_453
			.saturating_add(Weight::from_parts(102_297 as u64, 0).saturating_mul(s as u64))
			.saturating_add(RocksDbWeight::get().reads(10 as u64))
			.saturating_add(RocksDbWeight::get().writes(5 as u64))
	}
	// Storage: NominationPools UnbondingMembers (r:1 w:2)
	// Proof: NominationPools UnbondingMembers (max_values: None, max_size: Some(213), added: 2688, mode: MaxEncodedLen)
	// Storage: Staking CurrentEra (r:1 w:0)
	// Proof: Staking CurrentEra (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: NominationPools BondedPools (r:1 w:1)
	// Proof: NominationPools BondedPools (max_values: None, max_size: Some(462), added: 2937, mode: MaxEncodedLen)
	// Storage: NominationPools SubPoolsStorage (r:1 w:1)
	// Proof: NominationPools SubPoolsStorage (max_values: None, max_size: Some(1197), added: 3672, mode: MaxEncodedLen)
	// Storage: Fungibles TokenAccounts (r:3 w:0)
	// Proof: Fungibles TokenAccounts (max_values: None, max_size: Some(790), added: 3265, mode: MaxEncodedLen)
	// Storage: Staking Bonded (r:1 w:1)
	// Proof: Staking Bonded (max_values: None, max_size: Some(72), added: 2547, mode: MaxEncodedLen)
	// Storage: Staking Ledger (r:1 w:1)
	// Proof: Staking Ledger (max_values: None, max_size: Some(1091), added: 3566, mode: MaxEncodedLen)
	// Storage: Staking SlashingSpans (r:1 w:0)
	// Proof Skipped: Staking SlashingSpans (max_values: None, max_size: None, mode: Measured)
	// Storage: Staking Validators (r:1 w:0)
	// Proof: Staking Validators (max_values: None, max_size: Some(45), added: 2520, mode: MaxEncodedLen)
	// Storage: Staking Nominators (r:1 w:0)
	// Proof: Staking Nominators (max_values: None, max_size: Some(558), added: 3033, mode: MaxEncodedLen)
	// Storage: System Account (r:4 w:4)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: Balances Freezes (r:1 w:0)
	// Proof: Balances Freezes (max_values: None, max_size: Some(49), added: 2524, mode: MaxEncodedLen)
	// Storage: Fungibles Tokens (r:2 w:0)
	// Proof: Fungibles Tokens (max_values: None, max_size: Some(875), added: 3350, mode: MaxEncodedLen)
	// Storage: NominationPools ReversePoolIdLookup (r:1 w:1)
	// Proof: NominationPools ReversePoolIdLookup (max_values: None, max_size: Some(44), added: 2519, mode: MaxEncodedLen)
	// Storage: NominationPools CounterForReversePoolIdLookup (r:1 w:1)
	// Proof: NominationPools CounterForReversePoolIdLookup (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: NominationPools CounterForSubPoolsStorage (r:1 w:1)
	// Proof: NominationPools CounterForSubPoolsStorage (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: NominationPools CounterForBondedPools (r:1 w:1)
	// Proof: NominationPools CounterForBondedPools (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Staking Payee (r:0 w:1)
	// Proof: Staking Payee (max_values: None, max_size: Some(73), added: 2548, mode: MaxEncodedLen)
	// Storage: NominationPools UsedPoolAssetIds (r:0 w:1)
	// Proof: NominationPools UsedPoolAssetIds (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	fn withdraw_deposit() -> Weight {
		Weight::from_parts(263_000_000 as u64, 0)
			.saturating_add(RocksDbWeight::get().reads(24 as u64))
			.saturating_add(RocksDbWeight::get().writes(17 as u64))
	}
	// Storage: System Account (r:2 w:2)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	fn withdraw_free_balance() -> Weight {
		Weight::from_parts(44_000_000 as u64, 0)
			.saturating_add(RocksDbWeight::get().reads(2 as u64))
			.saturating_add(RocksDbWeight::get().writes(2 as u64))
	}
	// Storage: NominationPools NextPoolId (r:1 w:1)
	// Proof: NominationPools NextPoolId (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Staking MinNominatorBond (r:1 w:0)
	// Proof: Staking MinNominatorBond (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	// Storage: NominationPools MinCreateBond (r:1 w:0)
	// Proof: NominationPools MinCreateBond (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	// Storage: NominationPools MinJoinBond (r:1 w:0)
	// Proof: NominationPools MinJoinBond (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	// Storage: Fungibles TokenAccounts (r:2 w:1)
	// Proof: Fungibles TokenAccounts (max_values: None, max_size: Some(790), added: 3265, mode: MaxEncodedLen)
	// Storage: NominationPools UsedPoolAssetIds (r:1 w:1)
	// Proof: NominationPools UsedPoolAssetIds (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: Fungibles Attributes (r:1 w:0)
	// Proof: Fungibles Attributes (max_values: None, max_size: Some(1381), added: 3856, mode: MaxEncodedLen)
	// Storage: Staking CurrentEra (r:1 w:0)
	// Proof: Staking CurrentEra (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: System Account (r:3 w:3)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: Staking Bonded (r:1 w:1)
	// Proof: Staking Bonded (max_values: None, max_size: Some(72), added: 2547, mode: MaxEncodedLen)
	// Storage: Fungibles Tokens (r:1 w:1)
	// Proof: Fungibles Tokens (max_values: None, max_size: Some(875), added: 3350, mode: MaxEncodedLen)
	// Storage: Staking Ledger (r:1 w:1)
	// Proof: Staking Ledger (max_values: None, max_size: Some(1091), added: 3566, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: Balances Freezes (r:1 w:0)
	// Proof: Balances Freezes (max_values: None, max_size: Some(49), added: 2524, mode: MaxEncodedLen)
	// Storage: NominationPools ReversePoolIdLookup (r:1 w:1)
	// Proof: NominationPools ReversePoolIdLookup (max_values: None, max_size: Some(44), added: 2519, mode: MaxEncodedLen)
	// Storage: NominationPools CounterForReversePoolIdLookup (r:1 w:1)
	// Proof: NominationPools CounterForReversePoolIdLookup (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: NominationPools BondedPools (r:1 w:1)
	// Proof: NominationPools BondedPools (max_values: None, max_size: Some(462), added: 2937, mode: MaxEncodedLen)
	// Storage: NominationPools CounterForBondedPools (r:1 w:1)
	// Proof: NominationPools CounterForBondedPools (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Fungibles Collections (r:1 w:1)
	// Proof: Fungibles Collections (max_values: None, max_size: Some(478), added: 2953, mode: MaxEncodedLen)
	// Storage: Fungibles UnmintableAssetIds (r:1 w:0)
	// Proof: Fungibles UnmintableAssetIds (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
	// Storage: Fungibles CollectionAccounts (r:1 w:1)
	// Proof: Fungibles CollectionAccounts (max_values: None, max_size: Some(456), added: 2931, mode: MaxEncodedLen)
	// Storage: Staking Payee (r:0 w:1)
	// Proof: Staking Payee (max_values: None, max_size: Some(73), added: 2548, mode: MaxEncodedLen)
	fn create() -> Weight {
		Weight::from_parts(263_000_000 as u64, 0)
			.saturating_add(RocksDbWeight::get().reads(24 as u64))
			.saturating_add(RocksDbWeight::get().writes(17 as u64))
	}
	// Storage: NominationPools BondedPools (r:1 w:0)
	// Proof: NominationPools BondedPools (max_values: None, max_size: Some(462), added: 2937, mode: MaxEncodedLen)
	// Storage: Fungibles TokenAccounts (r:1 w:0)
	// Proof: Fungibles TokenAccounts (max_values: None, max_size: Some(790), added: 3265, mode: MaxEncodedLen)
	// Storage: Staking Bonded (r:1 w:0)
	// Proof: Staking Bonded (max_values: None, max_size: Some(72), added: 2547, mode: MaxEncodedLen)
	// Storage: Staking Ledger (r:1 w:0)
	// Proof: Staking Ledger (max_values: None, max_size: Some(1091), added: 3566, mode: MaxEncodedLen)
	// Storage: Staking MinNominatorBond (r:1 w:0)
	// Proof: Staking MinNominatorBond (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	// Storage: Staking Nominators (r:1 w:1)
	// Proof: Staking Nominators (max_values: None, max_size: Some(558), added: 3033, mode: MaxEncodedLen)
	// Storage: Staking MaxNominatorsCount (r:1 w:0)
	// Proof: Staking MaxNominatorsCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Staking Validators (r:17 w:0)
	// Proof: Staking Validators (max_values: None, max_size: Some(45), added: 2520, mode: MaxEncodedLen)
	// Storage: Staking CurrentEra (r:1 w:0)
	// Proof: Staking CurrentEra (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: VoterList ListNodes (r:1 w:1)
	// Proof: VoterList ListNodes (max_values: None, max_size: Some(154), added: 2629, mode: MaxEncodedLen)
	// Storage: VoterList ListBags (r:1 w:1)
	// Proof: VoterList ListBags (max_values: None, max_size: Some(82), added: 2557, mode: MaxEncodedLen)
	// Storage: VoterList CounterForListNodes (r:1 w:1)
	// Proof: VoterList CounterForListNodes (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Staking CounterForNominators (r:1 w:1)
	// Proof: Staking CounterForNominators (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// The range of component `n` is `[1, 16]`.
	fn nominate(n: u32, ) -> Weight {
		Weight::from_parts(79_876_511 as u64, 0)
			// Standard Error: 659_505
			.saturating_add(Weight::from_parts(1_271_157 as u64, 0).saturating_mul(n as u64))
			.saturating_add(RocksDbWeight::get().reads(13 as u64))
			.saturating_add(RocksDbWeight::get().reads((1 as u64).saturating_mul(n as u64)))
			.saturating_add(RocksDbWeight::get().writes(5 as u64))
	}
	// Storage: Staking CurrentEra (r:1 w:0)
	// Proof: Staking CurrentEra (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Staking ErasValidatorReward (r:1 w:0)
	// Proof: Staking ErasValidatorReward (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: Staking Bonded (r:257 w:0)
	// Proof: Staking Bonded (max_values: None, max_size: Some(72), added: 2547, mode: MaxEncodedLen)
	// Storage: Staking Ledger (r:257 w:257)
	// Proof: Staking Ledger (max_values: None, max_size: Some(1091), added: 3566, mode: MaxEncodedLen)
	// Storage: Staking ErasStakersClipped (r:1 w:0)
	// Proof Skipped: Staking ErasStakersClipped (max_values: None, max_size: None, mode: Measured)
	// Storage: NominationPools ReversePoolIdLookup (r:256 w:0)
	// Proof: NominationPools ReversePoolIdLookup (max_values: None, max_size: Some(44), added: 2519, mode: MaxEncodedLen)
	// Storage: NominationPools BondedPools (r:256 w:256)
	// Proof: NominationPools BondedPools (max_values: None, max_size: Some(462), added: 2937, mode: MaxEncodedLen)
	// Storage: System Account (r:1026 w:1026)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: Fungibles Tokens (r:256 w:0)
	// Proof: Fungibles Tokens (max_values: None, max_size: Some(875), added: 3350, mode: MaxEncodedLen)
	// Storage: Fungibles TokenAccounts (r:256 w:0)
	// Proof: Fungibles TokenAccounts (max_values: None, max_size: Some(790), added: 3265, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:257 w:257)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: Balances Freezes (r:257 w:0)
	// Proof: Balances Freezes (max_values: None, max_size: Some(49), added: 2524, mode: MaxEncodedLen)
	// Storage: VoterList ListNodes (r:256 w:256)
	// Proof: VoterList ListNodes (max_values: None, max_size: Some(154), added: 2629, mode: MaxEncodedLen)
	// Storage: VoterList ListBags (r:2 w:2)
	// Proof: VoterList ListBags (max_values: None, max_size: Some(82), added: 2557, mode: MaxEncodedLen)
	// Storage: Staking ErasRewardPoints (r:1 w:0)
	// Proof Skipped: Staking ErasRewardPoints (max_values: None, max_size: None, mode: Measured)
	// Storage: Staking ErasValidatorPrefs (r:1 w:0)
	// Proof: Staking ErasValidatorPrefs (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Staking Payee (r:257 w:0)
	// Proof: Staking Payee (max_values: None, max_size: Some(73), added: 2548, mode: MaxEncodedLen)
	// Storage: NominationPools EraPayoutInfo (r:1 w:1)
	// Proof: NominationPools EraPayoutInfo (max_values: Some(1), max_size: Some(13), added: 508, mode: MaxEncodedLen)
	/// The range of component `n` is `[0, 256]`.
	fn payout_rewards(n: u32, ) -> Weight {
		Weight::from_parts(171_868_297 as u64, 0)
			// Standard Error: 1_765_179
			.saturating_add(Weight::from_parts(237_055_891 as u64, 0).saturating_mul(n as u64))
			.saturating_add(RocksDbWeight::get().reads(14 as u64))
			.saturating_add(RocksDbWeight::get().reads((14 as u64).saturating_mul(n as u64)))
			.saturating_add(RocksDbWeight::get().writes(6 as u64))
			.saturating_add(RocksDbWeight::get().writes((8 as u64).saturating_mul(n as u64)))
	}
	// Storage: NominationPools CounterForBondedPools (r:1 w:0)
	// Proof: NominationPools CounterForBondedPools (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Staking CurrentEra (r:1 w:0)
	// Proof: Staking CurrentEra (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: NominationPools EraPayoutInfo (r:1 w:1)
	// Proof: NominationPools EraPayoutInfo (max_values: Some(1), max_size: Some(13), added: 508, mode: MaxEncodedLen)
	// Storage: Staking CounterForValidators (r:1 w:0)
	// Proof: Staking CounterForValidators (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Staking ValidatorCount (r:1 w:0)
	// Proof: Staking ValidatorCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: NominationPools BondedPools (r:101 w:100)
	// Proof: NominationPools BondedPools (max_values: None, max_size: Some(462), added: 2937, mode: MaxEncodedLen)
	// Storage: System Account (r:400 w:300)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: Fungibles Tokens (r:100 w:0)
	// Proof: Fungibles Tokens (max_values: None, max_size: Some(875), added: 3350, mode: MaxEncodedLen)
	// Storage: Fungibles TokenAccounts (r:100 w:0)
	// Proof: Fungibles TokenAccounts (max_values: None, max_size: Some(790), added: 3265, mode: MaxEncodedLen)
	// Storage: Staking Bonded (r:100 w:0)
	// Proof: Staking Bonded (max_values: None, max_size: Some(72), added: 2547, mode: MaxEncodedLen)
	// Storage: Staking Ledger (r:100 w:100)
	// Proof: Staking Ledger (max_values: None, max_size: Some(1091), added: 3566, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:100 w:100)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: Balances Freezes (r:100 w:0)
	// Proof: Balances Freezes (max_values: None, max_size: Some(49), added: 2524, mode: MaxEncodedLen)
	// Storage: VoterList ListNodes (r:100 w:0)
	// Proof: VoterList ListNodes (max_values: None, max_size: Some(154), added: 2629, mode: MaxEncodedLen)
	/// The range of component `n` is `[0, 100]`.
	fn process_payouts(n: u32, ) -> Weight {
		Weight::from_parts(18_000_000 as u64, 0)
			// Standard Error: 419_662
			.saturating_add(Weight::from_parts(121_918_896 as u64, 0).saturating_mul(n as u64))
			.saturating_add(RocksDbWeight::get().reads(6 as u64))
			.saturating_add(RocksDbWeight::get().reads((12 as u64).saturating_mul(n as u64)))
			.saturating_add(RocksDbWeight::get().writes(1 as u64))
			.saturating_add(RocksDbWeight::get().writes((6 as u64).saturating_mul(n as u64)))
	}
	// Storage: NominationPools EraPayoutInfo (r:1 w:1)
	// Proof: NominationPools EraPayoutInfo (max_values: Some(1), max_size: Some(13), added: 508, mode: MaxEncodedLen)
	// Storage: NominationPools MinJoinBond (r:0 w:1)
	// Proof: NominationPools MinJoinBond (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	// Storage: NominationPools MinCreateBond (r:0 w:1)
	// Proof: NominationPools MinCreateBond (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	// Storage: NominationPools GlobalMaxCommission (r:0 w:1)
	// Proof: NominationPools GlobalMaxCommission (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	fn set_configs() -> Weight {
		Weight::from_parts(7_000_000 as u64, 0)
			.saturating_add(RocksDbWeight::get().reads(1 as u64))
			.saturating_add(RocksDbWeight::get().writes(4 as u64))
	}
	// Storage: NominationPools BondedPools (r:1 w:0)
	// Proof: NominationPools BondedPools (max_values: None, max_size: Some(462), added: 2937, mode: MaxEncodedLen)
	// Storage: Fungibles TokenAccounts (r:1 w:0)
	// Proof: Fungibles TokenAccounts (max_values: None, max_size: Some(790), added: 3265, mode: MaxEncodedLen)
	// Storage: Staking Bonded (r:1 w:0)
	// Proof: Staking Bonded (max_values: None, max_size: Some(72), added: 2547, mode: MaxEncodedLen)
	// Storage: Staking Ledger (r:1 w:0)
	// Proof: Staking Ledger (max_values: None, max_size: Some(1091), added: 3566, mode: MaxEncodedLen)
	// Storage: Staking Validators (r:1 w:0)
	// Proof: Staking Validators (max_values: None, max_size: Some(45), added: 2520, mode: MaxEncodedLen)
	// Storage: Staking Nominators (r:1 w:1)
	// Proof: Staking Nominators (max_values: None, max_size: Some(558), added: 3033, mode: MaxEncodedLen)
	// Storage: Staking CounterForNominators (r:1 w:1)
	// Proof: Staking CounterForNominators (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: VoterList ListNodes (r:1 w:1)
	// Proof: VoterList ListNodes (max_values: None, max_size: Some(154), added: 2629, mode: MaxEncodedLen)
	// Storage: VoterList ListBags (r:1 w:1)
	// Proof: VoterList ListBags (max_values: None, max_size: Some(82), added: 2557, mode: MaxEncodedLen)
	// Storage: VoterList CounterForListNodes (r:1 w:1)
	// Proof: VoterList CounterForListNodes (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	fn chill() -> Weight {
		Weight::from_parts(72_000_000 as u64, 0)
			.saturating_add(RocksDbWeight::get().reads(10 as u64))
			.saturating_add(RocksDbWeight::get().writes(5 as u64))
	}
	// Storage: NominationPools BondedPools (r:1 w:1)
	// Proof: NominationPools BondedPools (max_values: None, max_size: Some(462), added: 2937, mode: MaxEncodedLen)
	// Storage: Fungibles Tokens (r:1 w:0)
	// Proof: Fungibles Tokens (max_values: None, max_size: Some(875), added: 3350, mode: MaxEncodedLen)
	// Storage: Fungibles TokenAccounts (r:1 w:0)
	// Proof: Fungibles TokenAccounts (max_values: None, max_size: Some(790), added: 3265, mode: MaxEncodedLen)
	fn destroy() -> Weight {
		Weight::from_parts(24_000_000 as u64, 0)
			.saturating_add(RocksDbWeight::get().reads(3 as u64))
			.saturating_add(RocksDbWeight::get().writes(1 as u64))
	}
	// Storage: NominationPools BondedPools (r:1 w:1)
	// Proof: NominationPools BondedPools (max_values: None, max_size: Some(462), added: 2937, mode: MaxEncodedLen)
	// Storage: Fungibles TokenAccounts (r:1 w:0)
	// Proof: Fungibles TokenAccounts (max_values: None, max_size: Some(790), added: 3265, mode: MaxEncodedLen)
	// Storage: NominationPools GlobalMaxCommission (r:1 w:0)
	// Proof: NominationPools GlobalMaxCommission (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Fungibles Attributes (r:1 w:0)
	// Proof: Fungibles Attributes (max_values: None, max_size: Some(1381), added: 3856, mode: MaxEncodedLen)
	// Storage: Staking CurrentEra (r:1 w:0)
	// Proof: Staking CurrentEra (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Fungibles Tokens (r:1 w:0)
	// Proof: Fungibles Tokens (max_values: None, max_size: Some(875), added: 3350, mode: MaxEncodedLen)
	// Storage: Staking Nominators (r:1 w:0)
	// Proof: Staking Nominators (max_values: None, max_size: Some(558), added: 3033, mode: MaxEncodedLen)
	fn mutate() -> Weight {
		Weight::from_parts(47_000_000 as u64, 0)
			.saturating_add(RocksDbWeight::get().reads(7 as u64))
			.saturating_add(RocksDbWeight::get().writes(1 as u64))
	}
}
