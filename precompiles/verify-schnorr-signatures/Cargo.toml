[package]
name = "pallet-evm-precompile-verify-schnorr-signatures"
version = "0.1.0"
authors = { workspace = true }
edition = "2021"
description = "A Precompile to verify schnorr signatures"

[dependencies]
precompile-utils = { workspace = true }

# Using remote crates
frost-core = { workspace = true, default-features = false }
frost-ed25519 = { workspace = true, default-features = false }
frost-ristretto255 = { workspace = true, default-features = false }
frost-secp256k1 = { workspace = true, default-features = false }
frost-p256 = { workspace = true, default-features = false }

# Using local crates
tg-frost-core = { workspace = true, default-features = false }
frost-p384 = { workspace = true, default-features = false }
frost-secp256k1-tr = { workspace = true, default-features = false }
frost-ed448 = { workspace = true, default-features = false }

# Substrate
sp-core = { workspace = true }
sp-std = { workspace = true }
sp-io = { workspace = true }
parity-scale-codec = { workspace = true, features = ["max-encoded-len"] }

# Frontier
fp-evm = { workspace = true }
pallet-evm = { workspace = true }

[dev-dependencies]
derive_more = { workspace = true, features = ["full"] }
hex-literal = { workspace = true }
scale-info = { workspace = true }
serde = { workspace = true }
rand_core = { workspace = true }

precompile-utils = { workspace = true, features = ["std", "testing"] }

# Substrate
pallet-balances = { workspace = true, features = ["std"] }
pallet-timestamp = { workspace = true, features = ["std"] }
frame-support = { workspace = true }
frame-system = { workspace = true }
sp-runtime = { workspace = true }


[features]
default = ["std"]
std = [
  "fp-evm/std",
  "pallet-evm/std",
  "parity-scale-codec/std",
  "sp-core/std",
  "precompile-utils/std",
  "sp-std/std",
  "sp-io/std",
  "frost-core/std",
  "frost-ed25519/std",
  "frost-ristretto255/std",
  "frost-secp256k1/std",
  "frost-p256/std",
  "tg-frost-core/std",
  "frost-p384/std",
  "frost-secp256k1-tr/std",
  "frost-ed448/std",
]
