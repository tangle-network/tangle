[package]
name = "tangle-testnet-runtime"
version = { workspace = true }
authors = { workspace = true }
edition = { workspace = true }
homepage = { workspace = true }
license = { workspace = true }
repository = { workspace = true }

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[build-dependencies]
substrate-wasm-builder = { workspace = true }

[dependencies]
hex-literal = { workspace = true }
log = { workspace = true }
num_enum = { workspace = true }
parity-scale-codec = { workspace = true }
scale-info = { workspace = true }
serde = { workspace = true }
static_assertions = { workspace = true }
primitive-types = { workspace = true }
fixed = { workspace = true }
hex = { workspace = true }

# Substrate dependencies
sp-api = { workspace = true }
sp-block-builder = { workspace = true }
sp-consensus-babe = { workspace = true }
sp-core = { workspace = true }
sp-inherents = { workspace = true }
sp-io = { workspace = true }
sp-offchain = { workspace = true }
sp-runtime = { workspace = true }
sp-session = { workspace = true }
sp-staking = { workspace = true }
sp-std = { workspace = true }
sp-genesis-builder = { workspace = true }
sp-storage = { workspace = true }
sp-transaction-pool = { workspace = true }
sp-version = { workspace = true }
frame-metadata-hash-extension = { workspace = true }
frame-benchmarking = { workspace = true, optional = true }
frame-election-provider-support = { workspace = true }
frame-executive = { workspace = true }
frame-support = { workspace = true }
frame-system = { workspace = true }
frame-system-benchmarking = { workspace = true, optional = true }
frame-system-rpc-runtime-api = { workspace = true }

pallet-babe = { workspace = true }
pallet-bags-list = { workspace = true }
pallet-session = { workspace = true }

pallet-bounties = { workspace = true }
pallet-child-bounties = { workspace = true }

pallet-collective = { workspace = true }
pallet-democracy = { workspace = true }
pallet-election-provider-multi-phase = { workspace = true }
pallet-elections-phragmen = { workspace = true }
pallet-grandpa = { workspace = true }
pallet-im-online = { workspace = true }
pallet-indices = { workspace = true }
pallet-offences = { workspace = true }

pallet-nomination-pools = { workspace = true }
pallet-preimage = { workspace = true }
pallet-scheduler = { workspace = true }
pallet-staking = { workspace = true }
pallet-staking-reward-curve = { workspace = true }
pallet-treasury = { workspace = true }

pallet-authorship = { workspace = true }
pallet-balances = { workspace = true }
pallet-assets = { workspace = true }

pallet-identity = { workspace = true }
pallet-proxy = { workspace = true }
pallet-randomness-collective-flip = { workspace = true }
pallet-sudo = { workspace = true }
pallet-timestamp = { workspace = true }
pallet-tx-pause = { workspace = true }
pallet-transaction-payment = { workspace = true }
pallet-transaction-payment-rpc-runtime-api = { workspace = true }
pallet-utility = { workspace = true }
pallet-multisig = { workspace = true }
pallet-vesting = { workspace = true }
pallet-tangle-lst = { workspace = true }

# Tangle dependencies
pallet-airdrop-claims = { workspace = true }
pallet-services = { workspace = true }
pallet-services-rpc-runtime-api = { workspace = true }
tangle-primitives = { workspace = true, features = ["verifying"] }
tangle-crypto-primitives = { workspace = true }
pallet-multi-asset-delegation = { workspace = true }

# Frontier dependencies
fp-evm = { workspace = true }
fp-rpc = { workspace = true }
fp-self-contained = { workspace = true }

# Frontier FRAME dependencies
pallet-base-fee = { workspace = true }
pallet-dynamic-fee = { workspace = true }
pallet-ethereum = { workspace = true }
pallet-evm = { workspace = true }
pallet-evm-chain-id = { workspace = true }
pallet-evm-precompile-balances-erc20 = { workspace = true }
pallet-evm-precompileset-assets-erc20 = { workspace = true }
pallet-evm-precompile-blake2 = { workspace = true }
pallet-evm-precompile-bn128 = { workspace = true }
pallet-evm-precompile-curve25519 = { workspace = true }
pallet-evm-precompile-dispatch = { workspace = true }
pallet-evm-precompile-ed25519 = { workspace = true }
pallet-evm-precompile-modexp = { workspace = true }
pallet-evm-precompile-sha3fips = { workspace = true }
pallet-evm-precompile-simple = { workspace = true }
pallet-hotfix-sufficients = { workspace = true }

## Tangle precompiles
pallet-evm-precompile-batch = { workspace = true }
pallet-evm-precompile-call-permit = { workspace = true }
pallet-evm-precompile-democracy = { workspace = true }
pallet-evm-precompile-preimage = { workspace = true }
pallet-evm-precompile-proxy = { workspace = true }
pallet-evm-precompile-registry = { workspace = true }
pallet-evm-precompile-staking = { workspace = true }
pallet-evm-precompile-vesting = { workspace = true }
pallet-evm-precompile-verify-ecdsa-secp256k1-signature = { workspace = true }
pallet-evm-precompile-verify-ecdsa-secp256r1-signature = { workspace = true }
pallet-evm-precompile-verify-ecdsa-stark-signature = { workspace = true }
pallet-evm-precompile-verify-schnorr-signatures = { workspace = true }
pallet-evm-precompile-verify-bls381-signature = { workspace = true }
pallet-evm-precompile-multi-asset-delegation = { workspace = true }
pallet-evm-precompile-services = { workspace = true }
precompile-utils = { workspace = true }

evm-tracer = { workspace = true }
rpc-primitives-debug = { workspace = true }
rpc-primitives-txpool = { workspace = true }

# Sygma
# sygma-access-segregator = { workspace = true }
# sygma-basic-feehandler = { workspace = true }
# sygma-traits = { workspace = true }
# sygma-fee-handler-router = { workspace = true }
# sygma-percentage-feehandler = { workspace = true }
# sygma-bridge = { workspace = true }
# sygma-runtime-api = { workspace = true }

# XCM
xcm = { workspace = true }
xcm-builder = { workspace = true }
xcm-executor = { workspace = true }
polkadot-parachain-primitives = { workspace = true }

[features]
runtime-benchmarks = [
    "frame-benchmarking",
    "frame-support/runtime-benchmarks",
    "frame-system/runtime-benchmarks",
    "frame-system-benchmarking/runtime-benchmarks",
    "pallet-balances/runtime-benchmarks",
    "pallet-assets/runtime-benchmarks",
    "pallet-vesting/runtime-benchmarks",
    "pallet-staking/runtime-benchmarks",
    "pallet-collective/runtime-benchmarks",
    "pallet-timestamp/runtime-benchmarks",
    "pallet-tx-pause/runtime-benchmarks",
    "sp-runtime/runtime-benchmarks",

    # Frontier
    "pallet-ethereum/runtime-benchmarks",
    "pallet-evm/runtime-benchmarks",
    "pallet-hotfix-sufficients/runtime-benchmarks",

    # Tangle
    "pallet-services/runtime-benchmarks",
    "pallet-airdrop-claims/runtime-benchmarks",

    "xcm-builder/runtime-benchmarks",
    "pallet-multi-asset-delegation/runtime-benchmarks",
]
default = ["std", "with-rocksdb-weights", "evm-tracing"]
local-testing = []

std = [
    "serde/std",
    "num_enum/std",
    "parity-scale-codec/std",
    "scale-info/std",
    "log/std",
    "sp-api/std",
    "sp-std/std",
    "sp-io/std",
    "sp-core/std",
    "sp-runtime/std",
    "sp-version/std",
    "sp-staking/std",
    "sp-offchain/std",
    "sp-session/std",
    "sp-block-builder/std",
    "sp-transaction-pool/std",
    "sp-inherents/std",
    "sp-consensus-babe/std",
    "frame-support/std",
    "sp-storage/std",
    "frame-executive/std",
    "frame-system/std",
    "frame-system-rpc-runtime-api/std",
    "frame-system-benchmarking?/std",
    "frame-election-provider-support/std",
    "sp-genesis-builder/std",
    "pallet-authorship/std",
    "pallet-babe/std",
    "pallet-bags-list/std",
    "pallet-bounties/std",
    "pallet-child-bounties/std",
    "pallet-balances/std",
    "pallet-assets/std",
    "pallet-vesting/std",
    "pallet-grandpa/std",
    "pallet-indices/std",
    "pallet-randomness-collective-flip/std",
    "pallet-session/std",
    "pallet-sudo/std",
    "pallet-timestamp/std",
    "pallet-transaction-payment/std",
    "pallet-transaction-payment-rpc-runtime-api/std",
    "pallet-tx-pause/std",
    "pallet-utility/std",
    "pallet-multisig/std",
    "pallet-collective/std",
    "pallet-democracy/std",
    "pallet-election-provider-multi-phase/std",
    "pallet-elections-phragmen/std",
    "pallet-im-online/std",
    "pallet-offences/std",
    "pallet-staking/std",
    "pallet-scheduler/std",
    "pallet-preimage/std",
    "pallet-nomination-pools/std",
    "pallet-treasury/std",
    "pallet-airdrop-claims/std",
    "pallet-identity/std",
    "frame-system-benchmarking?/std",
    "frame-metadata-hash-extension/std",
    "frame-benchmarking/std",
    "pallet-proxy/std",
    "fixed/std",
    "hex/std",
    "primitive-types/std",

    # Tangle dependencies
    "tangle-primitives/std",
    "tangle-crypto-primitives/std",
    "pallet-services/std",
    "pallet-multi-asset-delegation/std",
    "pallet-tangle-lst/std",
    "pallet-services-rpc-runtime-api/std",

    # Frontier
    "fp-evm/std",
    "fp-rpc/std",
    "fp-self-contained/std",

    # Frontier FRAME
    "pallet-base-fee/std",
    "pallet-dynamic-fee/std",
    "pallet-ethereum/std",
    "pallet-evm/std",
    "pallet-evm-chain-id/std",
    "pallet-evm-precompile-modexp/std",
    "pallet-evm-precompile-balances-erc20/std",
    "pallet-evm-precompile-sha3fips/std",
    "pallet-evm-precompile-simple/std",
    "pallet-evm-precompile-blake2/std",
    "pallet-evm-precompile-bn128/std",
    "pallet-evm-precompile-curve25519/std",
    "pallet-evm-precompile-dispatch/std",
    "pallet-evm-precompile-ed25519/std",
    "pallet-hotfix-sufficients/std",


    "evm-tracer/std",
    "rpc-primitives-debug/std",
    "rpc-primitives-txpool/std",

    # Tangle precompiles
    "pallet-evm-precompile-preimage/std",
    "pallet-evm-precompile-batch/std",
    "pallet-evm-precompile-call-permit/std",
    "pallet-evm-precompile-proxy/std",
    "pallet-evm-precompile-democracy/std",
    "pallet-evm-precompile-registry/std",
    "pallet-evm-precompile-staking/std",
    "pallet-evm-precompile-vesting/std",
    "pallet-evm-precompile-multi-asset-delegation/std",
    "pallet-evm-precompile-verify-ecdsa-secp256k1-signature/std",
    "pallet-evm-precompile-verify-ecdsa-secp256r1-signature/std",
    "pallet-evm-precompile-verify-ecdsa-stark-signature/std",
    "pallet-evm-precompile-verify-schnorr-signatures/std",
    "pallet-evm-precompile-verify-bls381-signature/std",
    "precompile-utils/std",
    "pallet-evm-precompile-services/std",

    # Sygma
    # "sygma-basic-feehandler/std",
    # "sygma-traits/std",
    # "sygma-bridge/std",
    # "sygma-access-segregator/std",
    # "sygma-fee-handler-router/std",
    # "sygma-percentage-feehandler/std",
    # "sygma-runtime-api/std",

    # XCM
    "xcm/std",
    "xcm-builder/std",
    "xcm-executor/std",
    "polkadot-parachain-primitives/std",
]
integration-tests = ["tangle-primitives/integration-tests"]
with-rocksdb-weights = []
with-paritydb-weights = []
evm-tracing = []
fast-runtime = ["tangle-primitives/fast-runtime"]

# Enable the metadata hash generation.
#
# This is hidden behind a feature because it increases the compile time.
# The wasm binary needs to be compiled twice, once to fetch the metadata,
# generate the metadata hash and then a second time with the
# `RUNTIME_METADATA_HASH` environment variable set for the `CheckMetadataHash`
# extension.
metadata-hash = ["substrate-wasm-builder/metadata-hash"]

# A convenience feature for enabling things when doing a build
# for an on-chain release.
on-chain-release-build = ["metadata-hash", "sp-api/disable-logging"]
