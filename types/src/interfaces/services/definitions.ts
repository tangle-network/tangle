// This file is part of Tangle.
// Copyright (C) 2022-2024 Webb Technologies Inc.
// SPDX-License-Identifier: Apache-2.0

import { Definitions } from '@polkadot/types/types'

export default {
  rpc: {
    queryServicesWithBlueprintsByOperator: {
      description:
        'Query all the services that this operator is providing along with their blueprints.',
      type: 'Vec<RpcServicesWithBlueprint>',
      params: [
        {
          name: 'operator',
          type: 'AccountId',
          isHistoric: true,
          isOptional: false,
        },
      ],
    },
  },
  types: {
    RpcServicesWithBlueprint: {
      blueprintId: 'u64',
      blueprint: 'ServiceBlueprint',
      services: 'Vec<Service>',
    },
    //
    ServiceBlueprint: {
      metadata: 'ServiceMetadata',
      jobs: 'Vec<JobDefinition>',
      registrationHook: 'ServiceRegistrationHook',
      registrationParams: 'Vec<FieldFieldType>',
      requestHook: 'ServiceRequestHook',
      requestParams: 'Vec<FieldFieldType>',
      gadget: 'Gadget',
    },
    ServiceMetadata: {
      name: 'Bytes',
      description: 'Option<Bytes>',
      author: 'Option<Bytes>',
      category: 'Option<Bytes>',
      codeRepository: 'Option<Bytes>',
      logo: 'Option<Bytes>',
      website: 'Option<Bytes>',
      license: 'Option<Bytes>',
    },
    JobDefinition: {
      metadata: 'JobMetadata',
      params: 'Vec<FieldFieldType>',
      result: 'Vec<FieldFieldType>',
      verifier: 'JobResultVerifier',
    },
    JobMetadata: {
      name: 'Bytes',
      description: 'Option<Bytes>',
    },
    FieldFieldType: {
      _enum: {
        Void: 'Null',
        Bool: 'Null',
        Uint8: 'Null',
        Int8: 'Null',
        Uint16: 'Null',
        Int16: 'Null',
        Uint32: 'Null',
        Int32: 'Null',
        Uint64: 'Null',
        Int64: 'Null',
        String: 'Null',
        Bytes: 'Null',
        Optional: 'FieldFieldType',
        Array: '(u64,FieldFieldType)',
        List: 'FieldFieldType',
        Struct: '(FieldFieldType,Vec<(FieldFieldType,FieldFieldType)>)',
        __Unused16: 'Null',
        __Unused17: 'Null',
        __Unused18: 'Null',
        __Unused19: 'Null',
        __Unused20: 'Null',
        __Unused21: 'Null',
        __Unused22: 'Null',
        __Unused23: 'Null',
        __Unused24: 'Null',
        __Unused25: 'Null',
        __Unused26: 'Null',
        __Unused27: 'Null',
        __Unused28: 'Null',
        __Unused29: 'Null',
        __Unused30: 'Null',
        __Unused31: 'Null',
        __Unused32: 'Null',
        __Unused33: 'Null',
        __Unused34: 'Null',
        __Unused35: 'Null',
        __Unused36: 'Null',
        __Unused37: 'Null',
        __Unused38: 'Null',
        __Unused39: 'Null',
        __Unused40: 'Null',
        __Unused41: 'Null',
        __Unused42: 'Null',
        __Unused43: 'Null',
        __Unused44: 'Null',
        __Unused45: 'Null',
        __Unused46: 'Null',
        __Unused47: 'Null',
        __Unused48: 'Null',
        __Unused49: 'Null',
        __Unused50: 'Null',
        __Unused51: 'Null',
        __Unused52: 'Null',
        __Unused53: 'Null',
        __Unused54: 'Null',
        __Unused55: 'Null',
        __Unused56: 'Null',
        __Unused57: 'Null',
        __Unused58: 'Null',
        __Unused59: 'Null',
        __Unused60: 'Null',
        __Unused61: 'Null',
        __Unused62: 'Null',
        __Unused63: 'Null',
        __Unused64: 'Null',
        __Unused65: 'Null',
        __Unused66: 'Null',
        __Unused67: 'Null',
        __Unused68: 'Null',
        __Unused69: 'Null',
        __Unused70: 'Null',
        __Unused71: 'Null',
        __Unused72: 'Null',
        __Unused73: 'Null',
        __Unused74: 'Null',
        __Unused75: 'Null',
        __Unused76: 'Null',
        __Unused77: 'Null',
        __Unused78: 'Null',
        __Unused79: 'Null',
        __Unused80: 'Null',
        __Unused81: 'Null',
        __Unused82: 'Null',
        __Unused83: 'Null',
        __Unused84: 'Null',
        __Unused85: 'Null',
        __Unused86: 'Null',
        __Unused87: 'Null',
        __Unused88: 'Null',
        __Unused89: 'Null',
        __Unused90: 'Null',
        __Unused91: 'Null',
        __Unused92: 'Null',
        __Unused93: 'Null',
        __Unused94: 'Null',
        __Unused95: 'Null',
        __Unused96: 'Null',
        __Unused97: 'Null',
        __Unused98: 'Null',
        __Unused99: 'Null',
        AccountId: 'Null',
      },
    },
    JobResultVerifier: {
      _enum: {
        None: 'Null',
        Evm: 'H160',
      },
    },
    ServiceRegistrationHook: {
      _enum: {
        None: 'Null',
        Evm: 'H160',
      },
    },
    ServiceRequestHook: {
      _enum: {
        None: 'Null',
        Evm: 'H160',
      },
    },
    Gadget: {
      _enum: {
        Wasm: 'WasmGadget',
        Native: 'NativeGadget',
        Container: 'ContainerGadget',
      },
    },
    ContainerGadget: {
      sources: 'Vec<GadgetSource>',
    },
    NativeGadget: {
      sources: 'Vec<GadgetSource>',
    },
    WasmGadget: {
      runtime: 'WasmRuntime',
      sources: 'Vec<GadgetSource>',
    },
    WasmRuntime: {
      _enum: ['Wasmtime', 'Wasmer'],
    },
    GadgetSource: {
      fetcher: 'GadgetSourceFetcher',
    },
    GadgetSourceFetcher: {
      _enum: {
        IPFS: 'Bytes',
        Github: 'GithubFetcher',
        ContainerImage: 'ImageRegistryFetcher',
        Testing: 'TestFetcher',
      },
    },
    GithubFetcher: {
      owner: 'Bytes',
      repo: 'Bytes',
      tag: 'Bytes',
      binaries: 'Vec<GadgetBinary>',
    },
    GadgetBinary: {
      arch: 'Architecture',
      os: 'OperatingSystem',
      name: 'Bytes',
      sha256: '[u8;32]',
    },
    Architecture: {
      _enum: [
        'Wasm',
        'Wasm64',
        'Wasi',
        'Wasi64',
        'Amd',
        'Amd64',
        'Arm',
        'Arm64',
        'RiscV',
        'RiscV64',
      ],
    },
    OperatingSystem: {
      _enum: ['Unknown', 'Linux', 'Windows', 'MacOS', 'BSD'],
    },
    ImageRegistryFetcher: {
      _alias: {
        registry_: 'registry',
      },
      registry_: 'Bytes',
      image: 'Bytes',
      tag: 'Bytes',
    },
    TestFetcher: {
      cargoPackage: 'Bytes',
      cargoBin: 'Bytes',
      basePath: 'Bytes',
    },
    Service: {
      id: 'u64',
      blueprint: 'u64',
      owner: 'AccountId32',
      permittedCallers: 'Vec<AccountId32>',
      operators: 'Vec<AccountId32>',
      ttl: 'u64',
    },
  },
} satisfies Definitions
