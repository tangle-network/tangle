name: Srtool build Wasm

on:
  workflow_dispatch:

  push:
    branches: [ main ]

jobs:
  srtool:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        chain: ["testnet", "mainnet"]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: ./.github/actions/free-disk-space

      - name: Checkout srtool
        uses: actions/checkout@v4
        with:
          repository: paritytech/srtool
          path: srtool-repo

      - name: Get Rust version from toolchain
        id: rust-version
        run: |
          # Read Rust version from rust-toolchain.toml
          RUST_VERSION=$(grep 'channel = ' rust-toolchain.toml | sed 's/.*channel = "\([^"]*\)".*/\1/')
          echo "version=$RUST_VERSION" >> $GITHUB_OUTPUT
          echo "Using Rust version from rust-toolchain.toml: $RUST_VERSION"

      - name: Build srtool Docker image
        run: |
          cd srtool-repo
          RUSTC_VERSION=${{ steps.rust-version.outputs.version }}
          echo "Building srtool with Rust $RUSTC_VERSION"
          docker build --build-arg RUSTC_VERSION=$RUSTC_VERSION -t local-srtool:latest .

      - name: Run Srtool build
        id: srtool_build
        shell: bash
        run: |
          git config --global --add safe.directory /build

          if [ "${{ matrix.chain }}" == "mainnet" ]; then
            PACKAGE="tangle-runtime"
          else
            PACKAGE="tangle-testnet-runtime"
          fi

          docker run --user $(id -u):$(id -g) \
            -e PACKAGE=$PACKAGE \
            -e RUNTIME_DIR=runtime/${{ matrix.chain }} \
            -e BUILD_OPTS="--features runtime-benchmarks" \
            -v $(pwd):/build \
            local-srtool:latest build

      - name: Summary
        run: |
          if [ "${{ matrix.chain }}" == "mainnet" ]; then
            WASM_PATH="runtime/mainnet/target/srtool/release/wbuild/tangle-runtime/tangle_runtime.compact.wasm"
            WASM_COMPRESSED_PATH="runtime/mainnet/target/srtool/release/wbuild/tangle-runtime/tangle_runtime.compact.compressed.wasm"
          else
            WASM_PATH="runtime/testnet/target/srtool/release/wbuild/tangle-testnet-runtime/tangle_testnet_runtime.compact.wasm"
            WASM_COMPRESSED_PATH="runtime/testnet/target/srtool/release/wbuild/tangle-testnet-runtime/tangle_testnet_runtime.compact.compressed.wasm"
          fi

          echo "wasm=$WASM_PATH" >> "$GITHUB_ENV"
          echo "wasm_compressed=$WASM_COMPRESSED_PATH" >> "$GITHUB_ENV"
          
          echo "{\"wasm\":\"$WASM_PATH\",\"wasm_compressed\":\"$WASM_COMPRESSED_PATH\"}" > ${{ matrix.chain }}-srtool-digest.json
          cat ${{ matrix.chain }}-srtool-digest.json
          echo "Runtime location: $WASM_PATH"

      - name: Archive Runtime
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.chain }}-runtime-${{ github.sha }}
          path: |
            ${{ env.wasm }}
            ${{ env.wasm_compressed }}
            ${{ matrix.chain }}-srtool-digest.json
